{
  "is_book": true,
  "anchor": "users_guides",
  "file": "index.html",
  "name": "Model Builder User's Guide",
  "headings": [],
  "children": [
    {
      "file": "introduction-and-preparation.html",
      "name": "I Introduction and Preparation",
      "headings": [],
      "children": [
        {
          "file": "introduction.html",
          "name": "1 Introduction",
          "headings": [
            {
              "level": 1,
              "anchor": "What-is-a-Model",
              "text": "1.1 What is a Model?"
            },
            {
              "level": 1,
              "anchor": "What-is-a-Functional-Model",
              "text": "1.2 What is a Functional Model?"
            },
            {
              "level": 1,
              "anchor": "What-is-a-Systems-Model",
              "text": "1.3 What is a Systems Model?"
            },
            {
              "level": 1,
              "anchor": "Simics-Team",
              "text": "1.4 Simics Team"
            },
            {
              "level": 1,
              "anchor": "The-Modeling-Process",
              "text": "1.5 The Modeling Process"
            },
            {
              "level": 1,
              "anchor": "Modeling-in-Simics",
              "text": "1.6 Modeling in Simics"
            },
            {
              "level": 2,
              "anchor": "Transaction-Level-Device-Modeling",
              "text": "1.6.1 Transaction-Level Device Modeling"
            },
            {
              "level": 2,
              "anchor": "Memory-System-Modeling-and-Address-Maps",
              "text": "1.6.2 Memory System Modeling and Address Maps"
            },
            {
              "level": 2,
              "anchor": "Processor-Modeling",
              "text": "1.6.3 Processor Modeling"
            },
            {
              "level": 2,
              "anchor": "Reusing-SystemC-and-Other-Types-of-Models",
              "text": "1.6.4 Reusing SystemC and Other Types of Models"
            },
            {
              "level": 2,
              "anchor": "Simics-High-Level-Modeling-Approach",
              "text": "1.6.5 Simics High Level Modeling Approach"
            },
            {
              "level": 1,
              "anchor": "Preparing-for-System-Modeling",
              "text": "1.7 Preparing for System Modeling"
            }
          ],
          "children": []
        },
        {
          "file": "modeling-techniques.html",
          "name": "2 Modeling Techniques",
          "headings": [
            {
              "level": 1,
              "anchor": "Device-Modeling-Methodology",
              "text": "2.1 Device Modeling Methodology"
            },
            {
              "level": 2,
              "anchor": "Follow-the-Hardware",
              "text": "2.1.1 Follow the Hardware"
            },
            {
              "level": 2,
              "anchor": "Follow-the-Software",
              "text": "2.1.2 Follow the Software"
            },
            {
              "level": 2,
              "anchor": "Do-Not-Model-Unnecessary-Detail",
              "text": "2.1.3 Do Not Model Unnecessary Detail"
            },
            {
              "level": 2,
              "anchor": "Reuse-and-Adapt-Existing-Components",
              "text": "2.1.4 Reuse and Adapt Existing Components"
            },
            {
              "level": 2,
              "anchor": "Develop-Device-Models-Using-DML",
              "text": "2.1.5 Develop Device Models Using DML"
            },
            {
              "level": 1,
              "anchor": "testing-device-models",
              "text": "2.2 Testing Device Models"
            },
            {
              "level": 1,
              "anchor": "abstraction-of-time",
              "text": "2.3 Abstraction of Time"
            },
            {
              "level": 2,
              "anchor": "Provide-Reaction-Immediately",
              "text": "2.3.1 Provide Reaction Immediately"
            },
            {
              "level": 2,
              "anchor": "cluster-events",
              "text": "2.3.2 Cluster Events"
            },
            {
              "level": 2,
              "anchor": "function-of-time",
              "text": "2.3.3 Transform Events into Functions of Time"
            }
          ],
          "children": []
        },
        {
          "file": "build-environment.html",
          "name": "3 Build Environment",
          "headings": [
            {
              "level": 1,
              "anchor": "Notes-for-Windows-Users",
              "text": "3.1 Notes for Windows Users"
            },
            {
              "level": 1,
              "anchor": "Notes-for-Linux-Users",
              "text": "3.2 Notes for Linux Users"
            },
            {
              "level": 1,
              "anchor": "Setting-up-a-Project",
              "text": "3.3 Setting up a Project"
            },
            {
              "level": 2,
              "anchor": "Project-Setup-Script-Invocation",
              "text": "3.3.1 Project Setup Script Invocation"
            },
            {
              "level": 2,
              "anchor": "Updating-Projects",
              "text": "3.3.2 Updating Projects"
            },
            {
              "level": 1,
              "anchor": "project-copy-module",
              "text": "3.4 Adding Modules to a Project"
            },
            {
              "level": 2,
              "anchor": "Creating-a-New-DML-Module",
              "text": "3.4.1 Creating a New DML Module"
            },
            {
              "level": 2,
              "anchor": "Creating-a-New-CC++-Module",
              "text": "3.4.2 Creating a New C/C++ Module"
            },
            {
              "level": 2,
              "anchor": "Adding-an-Existing-Module",
              "text": "3.4.3 Adding an Existing Module"
            },
            {
              "level": 1,
              "anchor": "Advanced-Tweaks",
              "text": "3.5 Advanced Tweaks"
            },
            {
              "level": 2,
              "anchor": "Compiling-Modules-in-Debug-Mode",
              "text": "3.5.1 Compiling Modules in Debug Mode"
            },
            {
              "level": 2,
              "anchor": "advanced-build-tweaks-platform-specific",
              "text": "3.5.2 Platform Specific Notes"
            },
            {
              "level": 2,
              "anchor": "makefile-details",
              "text": "3.5.3 Module Makefiles"
            },
            {
              "level": 2,
              "anchor": "Standard-Module-Host-Defines-in-CC++",
              "text": "3.5.4 Standard Module Host Defines in C/C++"
            },
            {
              "level": 2,
              "anchor": "User-Defined-Module-Version-Strings",
              "text": "3.5.5 User Defined Module Version Strings"
            },
            {
              "level": 2,
              "anchor": "Module-Loading-Support",
              "text": "3.5.6 Module Loading Support"
            },
            {
              "level": 2,
              "anchor": "Extra-libraries",
              "text": "3.5.7 Extra libraries"
            },
            {
              "level": 1,
              "anchor": "emacs-dml-mode",
              "text": "3.6 Emacs DML Editing Mode"
            }
          ],
          "children": []
        }
      ]
    },
    {
      "file": "part-device-modeling.html",
      "name": "II Device Modeling",
      "headings": [],
      "children": [
        {
          "file": "device-modeling-overview.html",
          "name": "4 Overview",
          "headings": [
            {
              "level": 1,
              "anchor": "Build-Environment",
              "text": "4.1 Build Environment"
            },
            {
              "level": 2,
              "anchor": "DML-Compiler",
              "text": "4.1.1 DML Compiler"
            },
            {
              "level": 2,
              "anchor": "Installation",
              "text": "4.1.2 Installation"
            },
            {
              "level": 2,
              "anchor": "Editing-DML-Code",
              "text": "4.1.3 Editing DML Code"
            },
            {
              "level": 2,
              "anchor": "Example-Device-Models",
              "text": "4.1.4 Example Device Models"
            },
            {
              "level": 1,
              "anchor": "simple-device-modeling",
              "text": "4.2 Device Modeling"
            },
            {
              "level": 2,
              "anchor": "simple-device",
              "text": "4.2.1 Simple Memory Mapped Device"
            },
            {
              "level": 2,
              "anchor": "Setup",
              "text": "4.2.2 Setup"
            },
            {
              "level": 2,
              "anchor": "Testing-the-Model",
              "text": "4.2.3 Testing the Model"
            },
            {
              "level": 2,
              "anchor": "simple-device-loading",
              "text": "4.2.4 Editing the Module"
            },
            {
              "level": 2,
              "anchor": "simple-configuration",
              "text": "4.2.5 Simple Configuration"
            },
            {
              "level": 2,
              "anchor": "Logging",
              "text": "4.2.6 Logging"
            },
            {
              "level": 2,
              "anchor": "configuration-attributes",
              "text": "4.2.7 Configuration Attributes"
            },
            {
              "level": 3,
              "anchor": "Using-Register-Attributes",
              "text": "4.2.7.1 Using Register Attributes"
            },
            {
              "level": 3,
              "anchor": "User-defined-Attributes",
              "text": "4.2.7.2 User-defined Attributes"
            },
            {
              "level": 3,
              "anchor": "attribute_init",
              "text": "4.2.7.3 Attribute Initialization"
            },
            {
              "level": 1,
              "anchor": "interfacing",
              "text": "4.3 Simics Interfaces"
            },
            {
              "level": 2,
              "anchor": "Introduction",
              "text": "4.3.1 Introduction"
            },
            {
              "level": 2,
              "anchor": "Implementing-an-Interface",
              "text": "4.3.2 Implementing an Interface"
            },
            {
              "level": 2,
              "anchor": "Connecting-Objects",
              "text": "4.3.3 Connecting Objects"
            },
            {
              "level": 3,
              "anchor": "Connection-Example",
              "text": "4.3.3.1 Connection Example"
            },
            {
              "level": 3,
              "anchor": "Sharing-Definitions",
              "text": "4.3.3.2 Sharing Definitions"
            },
            {
              "level": 3,
              "anchor": "A-Plug-in-Module",
              "text": "4.3.3.3 A Plug-in Module"
            },
            {
              "level": 3,
              "anchor": "connect-test",
              "text": "4.3.3.4 Testing the Connection"
            },
            {
              "level": 1,
              "anchor": "component-creation",
              "text": "4.4 Components"
            },
            {
              "level": 2,
              "anchor": "component-building",
              "text": "4.4.1 Building a Simple Component"
            },
            {
              "level": 2,
              "anchor": "component-loading",
              "text": "4.4.2 Loading and Connecting Components"
            }
          ],
          "children": []
        },
        {
          "file": "programming-with-dml.html",
          "name": "5 Programming with DML",
          "headings": [
            {
              "level": 1,
              "anchor": "dml-class",
              "text": "5.1 Modules, Classes, and Objects"
            },
            {
              "level": 1,
              "anchor": "spc-dml-parameters",
              "text": "5.2 Parameters"
            },
            {
              "level": 1,
              "anchor": "dml-attr",
              "text": "5.3 Attributes"
            },
            {
              "level": 2,
              "anchor": "A-Simple-Example",
              "text": "5.3.1 A Simple Example"
            },
            {
              "level": 2,
              "anchor": "spc-dml-attributes-ex-pseudo",
              "text": "5.3.2 A Pseudo Attribute"
            },
            {
              "level": 2,
              "anchor": "dml-attribute-errors",
              "text": "5.3.3 Attribute Errors"
            },
            {
              "level": 1,
              "anchor": "spc-dml-banks-and-registers",
              "text": "5.4 Banks and Registers"
            },
            {
              "level": 2,
              "anchor": "spc-dml-banks",
              "text": "5.4.1 Register Banks"
            },
            {
              "level": 2,
              "anchor": "spc-dml-registers",
              "text": "5.4.2 Registers"
            },
            {
              "level": 2,
              "anchor": "spc-dml-fields",
              "text": "5.4.3 Register Fields"
            },
            {
              "level": 2,
              "anchor": "spc-dml-getset",
              "text": "5.4.4 The get and set methods of registers"
            },
            {
              "level": 2,
              "anchor": "spc-dml-arrays",
              "text": "5.4.5 Bank and Register Arrays"
            },
            {
              "level": 1,
              "anchor": "spc-dml-interface",
              "text": "5.5 Interfaces"
            },
            {
              "level": 2,
              "anchor": "Using-Interfaces",
              "text": "5.5.1 Using Interfaces"
            },
            {
              "level": 2,
              "anchor": "Implementing-an-Interface",
              "text": "5.5.2 Implementing an Interface"
            },
            {
              "level": 2,
              "anchor": "Ports",
              "text": "5.5.3 Ports"
            },
            {
              "level": 2,
              "anchor": "Defining-a-New-Interface-Type",
              "text": "5.5.4 Defining a New Interface Type"
            },
            {
              "level": 1,
              "anchor": "spc-dml-templates",
              "text": "5.6 Templates"
            },
            {
              "level": 1,
              "anchor": "dml-log",
              "text": "5.7 Logging"
            },
            {
              "level": 2,
              "anchor": "log-groups",
              "text": "5.7.1 Log Groups"
            },
            {
              "level": 2,
              "anchor": "Log-Levels",
              "text": "5.7.2 Log Levels"
            },
            {
              "level": 1,
              "anchor": "dml-event",
              "text": "5.8 Events"
            },
            {
              "level": 2,
              "anchor": "Event-data",
              "text": "5.8.1 Event data"
            },
            {
              "level": 2,
              "anchor": "Managing-posted-events",
              "text": "5.8.2 Managing posted events"
            },
            {
              "level": 2,
              "anchor": "Alternate-event-queues",
              "text": "5.8.3 Alternate event queues"
            },
            {
              "level": 2,
              "anchor": "After",
              "text": "5.8.4 After"
            },
            {
              "level": 2,
              "anchor": "Event-Example",
              "text": "5.8.5 Event Example"
            },
            {
              "level": 1,
              "anchor": "dml-hap",
              "text": "5.9 Haps"
            },
            {
              "level": 2,
              "anchor": "Providing-Haps",
              "text": "5.9.1 Providing Haps"
            },
            {
              "level": 3,
              "anchor": "Adding-a-New-Type",
              "text": "Adding a New Type"
            },
            {
              "level": 3,
              "anchor": "Triggering-a-Hap",
              "text": "Triggering a Hap"
            }
          ],
          "children": []
        },
        {
          "file": "building-well-behaved-models.html",
          "name": "6 Building Well-Behaved Models",
          "headings": [
            {
              "level": 1,
              "anchor": "Structuring-DML-Code",
              "text": "6.1 Structuring DML Code"
            },
            {
              "level": 2,
              "anchor": "Device-Names",
              "text": "6.1.1 Device Names"
            },
            {
              "level": 2,
              "anchor": "File-Names",
              "text": "6.1.2 File Names"
            },
            {
              "level": 2,
              "anchor": "Bank-Names",
              "text": "6.1.3 Bank Names"
            },
            {
              "level": 2,
              "anchor": "Register-Fields",
              "text": "6.1.4 Register Fields"
            },
            {
              "level": 2,
              "anchor": "Structuring-DML-Files",
              "text": "6.1.5 Structuring DML Files"
            },
            {
              "level": 2,
              "anchor": "Object-Members-and-Scope",
              "text": "6.1.6 Object Members and Scope"
            },
            {
              "level": 1,
              "anchor": "General-Usability",
              "text": "6.2 General Usability"
            },
            {
              "level": 2,
              "anchor": "checkpointing",
              "text": "6.2.1 Checkpointing"
            },
            {
              "level": 2,
              "anchor": "Deterministic-Models",
              "text": "6.2.2 Deterministic Models"
            },
            {
              "level": 2,
              "anchor": "Saving-Data",
              "text": "6.2.3 Saving Data"
            },
            {
              "level": 2,
              "anchor": "inquiry",
              "text": "6.2.4 Support inquiry accesses"
            },
            {
              "level": 2,
              "anchor": "errors",
              "text": "6.2.5 Error Reporting"
            }
          ],
          "children": []
        },
        {
          "file": "dml-tips-and-tricks.html",
          "name": "7 DML Tips and Tricks",
          "headings": [],
          "children": []
        },
        {
          "file": "development-checklist.html",
          "name": "8 Simics Model Development Checklist",
          "headings": [
            {
              "level": 1,
              "anchor": "Generic-Checklist",
              "text": "8.1 Generic Checklist"
            },
            {
              "level": 1,
              "anchor": "Device-Checklist",
              "text": "8.2 Device Checklist"
            },
            {
              "level": 2,
              "anchor": "Ethernet-Devices",
              "text": "8.2.1 Ethernet Devices"
            },
            {
              "level": 2,
              "anchor": "Interrupt-Devices",
              "text": "8.2.2 Interrupt Devices"
            },
            {
              "level": 2,
              "anchor": "PCI-Devices",
              "text": "8.2.3 PCI Devices"
            },
            {
              "level": 2,
              "anchor": "Serial-Devices",
              "text": "8.2.4 Serial Devices"
            },
            {
              "level": 1,
              "anchor": "Processor-Model-Checklist",
              "text": "8.3 Processor Model Checklist"
            },
            {
              "level": 1,
              "anchor": "Component-Checklist",
              "text": "8.4 Component Checklist"
            },
            {
              "level": 1,
              "anchor": "System-Checklist",
              "text": "8.5 System Checklist"
            },
            {
              "level": 1,
              "anchor": "Target-Script-Checklist",
              "text": "8.6 Target Script Checklist"
            }
          ],
          "children": []
        },
        {
          "file": "advanced-programming-with-dml.html",
          "name": "9 Advanced Programming with DML",
          "headings": [
            {
              "level": 1,
              "anchor": "Using-the-Simics-API",
              "text": "9.1 Using the Simics API"
            },
            {
              "level": 1,
              "anchor": "Embedding-C-Code",
              "text": "9.2 Embedding C Code"
            },
            {
              "level": 1,
              "anchor": "Calling-Back-From-C",
              "text": "9.3 Calling Back From C"
            },
            {
              "level": 1,
              "anchor": "dml-and-c++",
              "text": "9.4 Integrating with C++"
            },
            {
              "level": 1,
              "anchor": "dividing-device",
              "text": "9.5 Dividing a Device into Classes"
            },
            {
              "level": 2,
              "anchor": "divide-one-class",
              "text": "9.5.1 One Class Only"
            },
            {
              "level": 2,
              "anchor": "divide-multiple-classes",
              "text": "9.5.2 One Class for Each Logical Unit"
            },
            {
              "level": 1,
              "anchor": "device-sharing-dml-code",
              "text": "9.6 Device Sharing DML Code"
            }
          ],
          "children": []
        },
        {
          "file": "example-models.html",
          "name": "10 Example Models",
          "headings": [
            {
              "level": 1,
              "anchor": "examples-AM79C960-dml",
              "text": "10.1 AM79C960"
            },
            {
              "level": 2,
              "anchor": "examples-AM79C960-dml-architecture-design",
              "text": "10.1.1 Architecture Design"
            },
            {
              "level": 2,
              "anchor": "examples-AM79C960-dml-interfaces-design",
              "text": "10.1.2 Interfaces Design"
            },
            {
              "level": 2,
              "anchor": "examples-AM79C960-dml-registers-design",
              "text": "10.1.3 Registers Design"
            },
            {
              "level": 2,
              "anchor": "examplesAM79C960-dml-other-elements-design",
              "text": "10.1.4 Other Elements Design"
            },
            {
              "level": 2,
              "anchor": "examples-AM79C960-dml-run-test",
              "text": "10.1.5 Run the AM79C960 model tests"
            },
            {
              "level": 1,
              "anchor": "examples-DS12887-dml",
              "text": "10.2 DS12887"
            },
            {
              "level": 2,
              "anchor": "examples-DS12887-dml-architecture-design",
              "text": "10.2.1 Architecture Design"
            },
            {
              "level": 2,
              "anchor": "examples-DS12887-dml-registers-design",
              "text": "10.2.2 Registers Design"
            },
            {
              "level": 2,
              "anchor": "examples-DS12887-dml-interfaces-design",
              "text": "10.2.3 Interfaces Design"
            },
            {
              "level": 2,
              "anchor": "examples-DS12887-dml-other-elements-design",
              "text": "10.2.4 Other Elements Design"
            },
            {
              "level": 2,
              "anchor": "examples-DS12887-dml-running",
              "text": "10.2.5 Running the DS12887 model"
            },
            {
              "level": 1,
              "anchor": "examples-DEC21140A-dml",
              "text": "10.3 DEC21140A"
            },
            {
              "level": 2,
              "anchor": "examples-DEC21140A-dml-architecture-design",
              "text": "10.3.1 Architecture Design"
            },
            {
              "level": 2,
              "anchor": "examples-DEC21140A-dml-interfaces-design",
              "text": "10.3.2 Interfaces Design"
            },
            {
              "level": 2,
              "anchor": "examples-DEC21140A-dml-registers-design",
              "text": "10.3.3 Registers Design"
            },
            {
              "level": 2,
              "anchor": "examples-DEC21140A-dml-other-elements-design",
              "text": "10.3.4 Other Elements Design"
            },
            {
              "level": 2,
              "anchor": "examples-DEC21140A-dml-run-test",
              "text": "10.3.5 Run the DEC21140A-dml Module"
            },
            {
              "level": 1,
              "anchor": "examples-generic_eth_phy",
              "text": "10.4 Ethernet PHY chip"
            }
          ],
          "children": []
        },
        {
          "file": "define-new-interface-type.html",
          "name": "11 Defining New Interface Types",
          "headings": [
            {
              "level": 1,
              "anchor": "Example",
              "text": "11.1 Example"
            },
            {
              "level": 1,
              "anchor": "spc-create-iface-limitations",
              "text": "11.2 Restrictions"
            },
            {
              "level": 1,
              "anchor": "Callback-Functions-in-Interfaces",
              "text": "11.3 Callback Functions in Interfaces"
            }
          ],
          "children": []
        },
        {
          "file": "python-in-modules.html",
          "name": "12 Using Python in a Simics module",
          "headings": [
            {
              "level": 1,
              "anchor": "Python-in-older-versions-of-Simics",
              "text": "12.1 Python in older versions of Simics"
            },
            {
              "level": 1,
              "anchor": "Recommendations-on-style",
              "text": "12.2 Recommendations on style"
            },
            {
              "level": 2,
              "anchor": "Importing-Python-modules-within-a-Simics-module",
              "text": "12.2.1 Importing Python modules within a Simics module"
            },
            {
              "level": 2,
              "anchor": "python-in-modules-style-sharing",
              "text": "12.2.2 Sharing Python code between Simics modules"
            },
            {
              "level": 2,
              "anchor": "Side-effects-in-modules",
              "text": "12.2.3 Side-effects in modules"
            }
          ],
          "children": []
        },
        {
          "file": "new-commands.html",
          "name": "13 Adding New Commands",
          "headings": [
            {
              "level": 1,
              "anchor": "Example-of-a-New-Command",
              "text": "13.1 Example of a New Command"
            },
            {
              "level": 1,
              "anchor": "The-new_command-Function",
              "text": "13.2 The new_command Function"
            },
            {
              "level": 1,
              "anchor": "The-arg-Function",
              "text": "13.3 The arg Function"
            },
            {
              "level": 1,
              "anchor": "Polyvalues",
              "text": "13.4 Polyvalues"
            },
            {
              "level": 1,
              "anchor": "Command-Errors",
              "text": "13.5 Command Errors"
            },
            {
              "level": 1,
              "anchor": "Human-readable-Messages",
              "text": "13.6 Human-readable Messages"
            },
            {
              "level": 1,
              "anchor": "info-and-status-commands",
              "text": "13.7 Info and Status Commands"
            },
            {
              "level": 2,
              "anchor": "Example",
              "text": "13.7.1 Example"
            }
          ],
          "children": []
        },
        {
          "file": "writing-module-with-c.html",
          "name": "14 Modeling with C",
          "headings": [
            {
              "level": 1,
              "anchor": "c-module",
              "text": "14.1 Module Loading"
            },
            {
              "level": 1,
              "anchor": "c-class",
              "text": "14.2 Classes"
            },
            {
              "level": 1,
              "anchor": "c-object",
              "text": "14.3 Objects"
            },
            {
              "level": 1,
              "anchor": "c-attr",
              "text": "14.4 Attributes"
            },
            {
              "level": 2,
              "anchor": "A-Simple-Example",
              "text": "14.4.1 A Simple Example"
            },
            {
              "level": 2,
              "anchor": "A-Pseudo-Attribute",
              "text": "14.4.2 A Pseudo Attribute"
            },
            {
              "level": 2,
              "anchor": "c-attribute-errors",
              "text": "14.4.3 Attribute Errors"
            },
            {
              "level": 1,
              "anchor": "c-iface",
              "text": "14.5 Interfaces"
            },
            {
              "level": 2,
              "anchor": "c-iface-example",
              "text": "14.5.1 Using Interfaces"
            },
            {
              "level": 2,
              "anchor": "Using-Port-Interfaces",
              "text": "14.5.2 Using Port Interfaces"
            },
            {
              "level": 2,
              "anchor": "Implementing-an-Interface",
              "text": "14.5.3 Implementing an Interface"
            },
            {
              "level": 2,
              "anchor": "Implementing-Interfaces-on-Port-Objects",
              "text": "14.5.4 Implementing Interfaces on Port Objects"
            },
            {
              "level": 1,
              "anchor": "c-log",
              "text": "14.6 Logging"
            },
            {
              "level": 1,
              "anchor": "c-event",
              "text": "14.7 Events"
            },
            {
              "level": 1,
              "anchor": "c-hap",
              "text": "14.8 Haps"
            },
            {
              "level": 2,
              "anchor": "Providing-Haps",
              "text": "14.8.1 Providing Haps"
            },
            {
              "level": 3,
              "anchor": "Adding-a-New-Type",
              "text": "Adding a New Type"
            },
            {
              "level": 3,
              "anchor": "Triggering-a-Hap",
              "text": "Triggering a Hap"
            },
            {
              "level": 1,
              "anchor": "Using-the-PythonC-API",
              "text": "14.9 Using the Python/C API"
            }
          ],
          "children": []
        },
        {
          "file": "writing-module-with-pyobj.html",
          "name": "15 Modeling with Python",
          "headings": [
            {
              "level": 1,
              "anchor": "pyobj-new-device",
              "text": "15.1 Creating a New Python Device"
            },
            {
              "level": 1,
              "anchor": "pyobj-pyobj-module",
              "text": "15.2 The pyobj Python Module"
            },
            {
              "level": 1,
              "anchor": "pyobj-class-base-methods",
              "text": "15.3 ConfObject Class Basic Methods"
            },
            {
              "level": 1,
              "anchor": "pyobj-class-parameters",
              "text": "15.4 ConfObject Class Parameters"
            },
            {
              "level": 1,
              "anchor": "pyobj-attribute",
              "text": "15.5 Attributes"
            },
            {
              "level": 1,
              "anchor": "pyobj-class-attribute",
              "text": "15.6 Class Attributes"
            },
            {
              "level": 1,
              "anchor": "pyobj-class-in-class",
              "text": "15.7 The _up Member"
            },
            {
              "level": 1,
              "anchor": "pyobj-interface",
              "text": "15.8 Interfaces"
            },
            {
              "level": 1,
              "anchor": "pyobj-port",
              "text": "15.9 Port Objects"
            },
            {
              "level": 1,
              "anchor": "pyobj-event",
              "text": "15.10 Events"
            }
          ],
          "children": []
        },
        {
          "file": "writing-model-tests.html",
          "name": "16 Writing Model Tests",
          "headings": [
            {
              "level": 1,
              "anchor": "Overview",
              "text": "16.1 Overview"
            },
            {
              "level": 1,
              "anchor": "Sample-Tests",
              "text": "16.2 Sample Tests"
            },
            {
              "level": 1,
              "anchor": "Writing-Tests",
              "text": "16.3 Writing Tests"
            },
            {
              "level": 2,
              "anchor": "Anatomy-of-a-Test-Suite",
              "text": "16.3.1 Anatomy of a Test Suite"
            },
            {
              "level": 2,
              "anchor": "Configuration",
              "text": "16.3.2 Configuration"
            },
            {
              "level": 2,
              "anchor": "Accessing-Device-Registers-from-Tests",
              "text": "16.3.3 Accessing Device Registers from Tests"
            },
            {
              "level": 2,
              "anchor": "memory-accesses",
              "text": "16.3.4 Responding to Memory Accesses From Models"
            },
            {
              "level": 2,
              "anchor": "Test-Coverage-and-Speed",
              "text": "16.3.5 Test Coverage and Speed"
            },
            {
              "level": 2,
              "anchor": "Documenting-Tests",
              "text": "16.3.6 Documenting Tests"
            },
            {
              "level": 2,
              "anchor": "Arranging-Test-Code",
              "text": "16.3.7 Arranging Test Code"
            }
          ],
          "children": []
        }
      ]
    },
    {
      "file": "part-common-hardware-components.html",
      "name": "III Modeling Common Hardware Components",
      "headings": [],
      "children": [
        {
          "file": "modeling-interrupt-controllers.html",
          "name": "17 Modeling Interrupt Controllers",
          "headings": [
            {
              "level": 1,
              "anchor": "Edge-Triggered-and-Level-Triggered",
              "text": "17.1 Edge Triggered and Level Triggered"
            }
          ],
          "children": []
        },
        {
          "file": "dma.html",
          "name": "18 Modeling Direct Memory Access (DMA)",
          "headings": [
            {
              "level": 1,
              "anchor": "Simulating-Time",
              "text": "18.1 Simulating Time"
            },
            {
              "level": 1,
              "anchor": "Interrupting-on-Completion",
              "text": "18.2 Interrupting on Completion"
            },
            {
              "level": 1,
              "anchor": "dma-scatter-gather",
              "text": "18.3 Supporting Scatter Gather Lists Using Layouts"
            }
          ],
          "children": []
        },
        {
          "file": "modeling-i2c-devices.html",
          "name": "19 Modeling I2C Devices",
          "headings": [
            {
              "level": 1,
              "anchor": "Introduction",
              "text": "19.1 Introduction"
            },
            {
              "level": 1,
              "anchor": "i2c-high-level",
              "text": "19.2 High-Level I2C Device Modeling"
            },
            {
              "level": 1,
              "anchor": "i2c-low-level",
              "text": "19.3 Low-Level I2C Device Modeling"
            }
          ],
          "children": []
        },
        {
          "file": "frags_t.html",
          "name": "20 Representing Network Packets with frags_t",
          "headings": [
            {
              "level": 1,
              "anchor": "Background",
              "text": "20.1 Background"
            },
            {
              "level": 1,
              "anchor": "Fragment-lists",
              "text": "20.2 Fragment lists"
            },
            {
              "level": 1,
              "anchor": "Getting-to-the-data",
              "text": "20.3 Getting to the data"
            },
            {
              "level": 1,
              "anchor": "Avoiding-allocation",
              "text": "20.4 Avoiding allocation"
            },
            {
              "level": 1,
              "anchor": "Keeping-the-data",
              "text": "20.5 Keeping the data"
            },
            {
              "level": 1,
              "anchor": "Multithreading",
              "text": "20.6 Multithreading"
            },
            {
              "level": 1,
              "anchor": "Conventions",
              "text": "20.7 Conventions"
            },
            {
              "level": 1,
              "anchor": "How-to-use-frags_t-to...",
              "text": "20.8 How to use frags_t to..."
            },
            {
              "level": 1,
              "anchor": "API",
              "text": "20.9 API"
            }
          ],
          "children": []
        },
        {
          "file": "modeling-network-communication.html",
          "name": "21 Modeling Network Communication",
          "headings": [],
          "children": []
        },
        {
          "file": "modeling-ethernet-devices.html",
          "name": "22 Modeling Ethernet Devices",
          "headings": [
            {
              "level": 1,
              "anchor": "Common-Ethernet-Interface",
              "text": "22.1 Common Ethernet Interface"
            },
            {
              "level": 1,
              "anchor": "Ethernet-Component",
              "text": "22.2 Ethernet Component"
            },
            {
              "level": 1,
              "anchor": "Ethernet-Transceiver",
              "text": "22.3 Ethernet Transceiver"
            }
          ],
          "children": []
        }
      ]
    },
    {
      "file": "part-system-modeling.html",
      "name": "IV Creating Virtual Systems",
      "headings": [],
      "children": [
        {
          "file": "memory-space.html",
          "name": "23 Memory Spaces",
          "headings": [
            {
              "level": 1,
              "anchor": "Memory-Space-Basics",
              "text": "23.1 Memory Space Basics"
            },
            {
              "level": 1,
              "anchor": "Memory-Space-Commands",
              "text": "23.2 Memory Space Commands"
            },
            {
              "level": 1,
              "anchor": "Memory-Mapping-Use-Cases",
              "text": "23.3 Memory Mapping Use Cases"
            },
            {
              "level": 1,
              "anchor": "Avoiding-Circular-Mappings",
              "text": "23.4 Avoiding Circular Mappings"
            }
          ],
          "children": []
        },
        {
          "file": "creating-configurations.html",
          "name": "24 Components",
          "headings": [
            {
              "level": 1,
              "anchor": "Introduction",
              "text": "24.1 Introduction"
            },
            {
              "level": 2,
              "anchor": "Component-Class",
              "text": "24.1.1 Component Class"
            },
            {
              "level": 2,
              "anchor": "Component-Module",
              "text": "24.1.2 Component Module"
            },
            {
              "level": 2,
              "anchor": "Components-in-Project",
              "text": "24.1.3 Components in Project"
            },
            {
              "level": 1,
              "anchor": "cmp-hierarchies",
              "text": "24.2 Namespace Hierarchies"
            },
            {
              "level": 2,
              "anchor": "cmp-hierarchies-namespaces",
              "text": "24.2.1 Namespaces"
            },
            {
              "level": 2,
              "anchor": "cmp-hierarchies-precedence",
              "text": "24.2.2 Precedence"
            },
            {
              "level": 1,
              "anchor": "cmp-connected-trees",
              "text": "24.3 Component Hierarchies"
            },
            {
              "level": 1,
              "anchor": "cmp-connecting-components",
              "text": "24.4 Connecting Components"
            },
            {
              "level": 2,
              "anchor": "cmp-connector-properties",
              "text": "24.4.1 Connector Properties"
            },
            {
              "level": 2,
              "anchor": "cmp-connector-object",
              "text": "24.4.2 Connector Objects"
            },
            {
              "level": 2,
              "anchor": "cmp-connecting-connectors",
              "text": "24.4.3 Connecting Connectors"
            },
            {
              "level": 2,
              "anchor": "cmp-connector-references",
              "text": "24.4.4 Adding Connector References"
            },
            {
              "level": 2,
              "anchor": "cmp-eth-compat",
              "text": "24.4.5 Ethernet Link Connections"
            },
            {
              "level": 1,
              "anchor": "cmp-life-of-a-component",
              "text": "24.5 Life of a Component"
            },
            {
              "level": 2,
              "anchor": "cmp-phase-create",
              "text": "24.5.1 Creation Phase"
            },
            {
              "level": 2,
              "anchor": "cmp-phase-setup",
              "text": "24.5.2 Setup Phase"
            },
            {
              "level": 2,
              "anchor": "cmp-phase-connect",
              "text": "24.5.3 Connect Phase"
            },
            {
              "level": 2,
              "anchor": "cmp-phase-instantiate",
              "text": "24.5.4 Instantiate Phase"
            },
            {
              "level": 1,
              "anchor": "cmp-implementing",
              "text": "24.6 Implementing Components"
            },
            {
              "level": 2,
              "anchor": "cmp-new-component",
              "text": "24.6.1 Creating a New Component"
            },
            {
              "level": 2,
              "anchor": "The-comp-Python-Module",
              "text": "24.6.2 The comp Python Module"
            },
            {
              "level": 2,
              "anchor": "StandardComponent-Class-Basic-Methods",
              "text": "24.6.3 StandardComponent Class Basic Methods"
            },
            {
              "level": 2,
              "anchor": "StandardComponent-Class-Parameters",
              "text": "24.6.4 StandardComponent Class Parameters"
            },
            {
              "level": 2,
              "anchor": "cmp-adding-attributes",
              "text": "24.6.5 Adding Attributes"
            },
            {
              "level": 2,
              "anchor": "cmp-adding-config-attributes",
              "text": "24.6.6 Adding Config Attributes"
            },
            {
              "level": 2,
              "anchor": "cmp-overriding-attributes",
              "text": "24.6.7 Overriding Attributes"
            },
            {
              "level": 2,
              "anchor": "cmp-class-in-class",
              "text": "24.6.8 The _up Member"
            },
            {
              "level": 2,
              "anchor": "cmp-adding-objects-to-slots",
              "text": "24.6.9 Adding Objects to Slots"
            },
            {
              "level": 3,
              "anchor": "cmp-objslot-add-single",
              "text": "24.6.9.1 Adding Single Object"
            },
            {
              "level": 3,
              "anchor": "cmp-objslot-add-array",
              "text": "24.6.9.2 Adding Array of Objects"
            },
            {
              "level": 3,
              "anchor": "cmp-objslot-add-anon",
              "text": "24.6.9.3 Lazy Slot Object Assignment"
            },
            {
              "level": 2,
              "anchor": "cmp-adding-connectors",
              "text": "24.6.10 Adding Connectors"
            },
            {
              "level": 3,
              "anchor": "cmp-add-connector-explicit",
              "text": "24.6.10.1 Defining Connector Explicitly"
            },
            {
              "level": 3,
              "anchor": "cmp-add-connector-classes",
              "text": "24.6.10.2 Connector Classes"
            },
            {
              "level": 2,
              "anchor": "cmp-adding-components",
              "text": "24.6.11 Adding Components"
            },
            {
              "level": 3,
              "anchor": "cmp-adding-sub-component",
              "text": "24.6.11.1 Adding Sub Component"
            },
            {
              "level": 3,
              "anchor": "cmp-connecting-sub-components",
              "text": "24.6.11.2 Adding and Connecting Sub Components"
            },
            {
              "level": 2,
              "anchor": "Overriding-Interfaces",
              "text": "24.6.12 Overriding Interfaces"
            },
            {
              "level": 2,
              "anchor": "Adding-Dynamic-Connectors",
              "text": "24.6.13 Adding Dynamic Connectors"
            },
            {
              "level": 1,
              "anchor": "cmp-example-component",
              "text": "24.7 Example Component"
            },
            {
              "level": 2,
              "anchor": "cmp-sample-comp",
              "text": "24.7.1 Sample Component"
            },
            {
              "level": 2,
              "anchor": "cmp-hierarchical-example",
              "text": "24.7.2 Hierarchical Component Example"
            },
            {
              "level": 2,
              "anchor": "cmp-flat-example",
              "text": "24.7.3 Flat Component Example"
            },
            {
              "level": 1,
              "anchor": "cmp-reference",
              "text": "24.8 Component Reference"
            },
            {
              "level": 2,
              "anchor": "cmp-interfaces",
              "text": "24.8.1 Component Interfaces"
            },
            {
              "level": 3,
              "anchor": "component_interface_t",
              "text": "24.8.1.1 component_interface_t"
            },
            {
              "level": 3,
              "anchor": "component_connector_interface_t",
              "text": "24.8.1.2 component_connector_interface_t"
            },
            {
              "level": 2,
              "anchor": "Component-Commands",
              "text": "24.8.2 Component Commands"
            },
            {
              "level": 2,
              "anchor": "cmp-attributes",
              "text": "24.8.3 Component Attributes"
            },
            {
              "level": 3,
              "anchor": "Attributes",
              "text": "24.8.3.1 Attributes"
            },
            {
              "level": 3,
              "anchor": "Class-Attributes",
              "text": "24.8.3.2 Class Attributes"
            },
            {
              "level": 2,
              "anchor": "Standard-Attributes",
              "text": "24.8.4 Standard Attributes"
            },
            {
              "level": 2,
              "anchor": "Standard-Interfaces",
              "text": "24.8.5 Standard Interfaces"
            },
            {
              "level": 1,
              "anchor": "cmp-features",
              "text": "24.9 Various Component Features"
            },
            {
              "level": 2,
              "anchor": "Checkpointing",
              "text": "24.9.1 Checkpointing"
            },
            {
              "level": 2,
              "anchor": "Automatic-Queue-Assignment",
              "text": "24.9.2 Automatic Queue Assignment"
            },
            {
              "level": 2,
              "anchor": "Automatic-Recorder-Assignment",
              "text": "24.9.3 Automatic Recorder Assignment"
            },
            {
              "level": 2,
              "anchor": "Inheritance",
              "text": "24.9.4 Inheritance"
            },
            {
              "level": 2,
              "anchor": "Hotplugging",
              "text": "24.9.5 Hotplugging"
            },
            {
              "level": 1,
              "anchor": "cmp-connector-types",
              "text": "24.10 Standard Connector Types"
            },
            {
              "level": 1,
              "anchor": "cmp-comp-lib",
              "text": "24.11 The comp Component"
            },
            {
              "level": 2,
              "anchor": "comp.StandardComponent.component-methods",
              "text": "24.11.1 comp.StandardComponent.component methods"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.component.add_slot",
              "text": "comp.StandardComponent.component.add_slot()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.component.create_cell",
              "text": "comp.StandardComponent.component.create_cell()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.component.del_slot",
              "text": "comp.StandardComponent.component.del_slot()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.component.get_slot_objects",
              "text": "comp.StandardComponent.component.get_slot_objects()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.component.get_slot_value",
              "text": "comp.StandardComponent.component.get_slot_value()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.component.get_slots",
              "text": "comp.StandardComponent.component.get_slots()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.component.has_slot",
              "text": "comp.StandardComponent.component.has_slot()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.component.post_instantiate",
              "text": "comp.StandardComponent.component.post_instantiate()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.component.pre_instantiate",
              "text": "comp.StandardComponent.component.pre_instantiate()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.component.set_slot_value",
              "text": "comp.StandardComponent.component.set_slot_value()"
            }
          ],
          "children": []
        },
        {
          "file": "adding-flash-to-a-system.html",
          "name": "25 Adding Flash to a System",
          "headings": [
            {
              "level": 1,
              "anchor": "Instantiating-Flash-Memory",
              "text": "25.1 Instantiating Flash Memory"
            },
            {
              "level": 1,
              "anchor": "Adding-New-Flash-Models",
              "text": "25.2 Adding New Flash Models"
            }
          ],
          "children": []
        },
        {
          "file": "software-domains.html",
          "name": "26 Software Domains",
          "headings": [
            {
              "level": 1,
              "anchor": "Domain-Definition-in-Simics",
              "text": "26.1 Domain Definition in Simics"
            },
            {
              "level": 1,
              "anchor": "finding-the-processors",
              "text": "26.2 Finding the Processors"
            },
            {
              "level": 1,
              "anchor": "Software-Trackers",
              "text": "26.3 Software Trackers"
            },
            {
              "level": 1,
              "anchor": "Cells-and-Software-Domains",
              "text": "26.4 Cells and Software Domains"
            }
          ],
          "children": []
        },
        {
          "file": "machine-creation.html",
          "name": "27 System Configurations",
          "headings": [
            {
              "level": 1,
              "anchor": "machine-creation-introduction",
              "text": "27.1 Simple Command Script"
            },
            {
              "level": 1,
              "anchor": "Creating-New-Machine-Scripts",
              "text": "27.2 Creating New Machine Scripts"
            },
            {
              "level": 1,
              "anchor": "Multi-Machine-Scripts",
              "text": "27.3 Multi-Machine Scripts"
            },
            {
              "level": 1,
              "anchor": "Testing-Machines",
              "text": "27.4 Testing Machines"
            },
            {
              "level": 2,
              "anchor": "Checkpoint-Test",
              "text": "27.4.1 Checkpoint Test"
            },
            {
              "level": 2,
              "anchor": "Reverse-Execution-Test",
              "text": "27.4.2 Reverse Execution Test"
            }
          ],
          "children": []
        }
      ]
    },
    {
      "file": "part-packages-creation.html",
      "name": "V Creating Own Packages",
      "headings": [],
      "children": [
        {
          "file": "project-packager-introduction.html",
          "name": "28 Introduction",
          "headings": [],
          "children": []
        },
        {
          "file": "create-customer-packages.html",
          "name": "29 Create Customer Packages",
          "headings": [],
          "children": []
        },
        {
          "file": "examples.html",
          "name": "30 Examples",
          "headings": [
            {
              "level": 1,
              "anchor": "Simics-Distribution-License-Example",
              "text": "30.1 Simics Distribution License Example"
            },
            {
              "level": 2,
              "anchor": "Install-Simics-for-Development",
              "text": "30.1.1 Install Simics for Development"
            },
            {
              "level": 2,
              "anchor": "Create-a-Development-Project-and-Develop-a-Device-Model",
              "text": "30.1.2 Create a Development Project and Develop a Device Model"
            },
            {
              "level": 2,
              "anchor": "Create-the-Target-System-Scripts",
              "text": "30.1.3 Create the Target System Scripts"
            },
            {
              "level": 2,
              "anchor": "Convert-the-Project-to-a-Package",
              "text": "30.1.4 Convert the Project to a Package"
            },
            {
              "level": 2,
              "anchor": "Test-Install-the-Thirdstep-Package",
              "text": "30.1.5 Test Install the Thirdstep Package"
            },
            {
              "level": 2,
              "anchor": "Create-a-Test-Project-and-Test-the-Install",
              "text": "30.1.6 Create a Test Project and Test the Install"
            },
            {
              "level": 2,
              "anchor": "Create-a-Clean-Install-for-Distribution",
              "text": "30.1.7 Create a Clean Install for Distribution"
            },
            {
              "level": 2,
              "anchor": "Confirm-the-.package-list-File-Contains-only-Relative-Paths",
              "text": "30.1.8 Confirm the .package-list File Contains only Relative Paths"
            },
            {
              "level": 2,
              "anchor": "Create-a-Script-to-Start-Simics",
              "text": "30.1.9 Create a Script to Start Simics"
            },
            {
              "level": 2,
              "anchor": "Create-a-Distributable-File",
              "text": "30.1.10 Create a Distributable File"
            },
            {
              "level": 1,
              "anchor": "Creating-an-Encrypted-Package-for-the-Simics-Installer",
              "text": "30.2 Creating an Encrypted Package for the Simics Installer"
            },
            {
              "level": 2,
              "anchor": "Create-Encrypted-Package",
              "text": "30.2.1 Create Encrypted Package"
            },
            {
              "level": 2,
              "anchor": "Install-Encrypted-Package",
              "text": "30.2.2 Install Encrypted Package"
            },
            {
              "level": 1,
              "anchor": "Additional-project-packager-Script-Parameters",
              "text": "30.3 Additional project-packager Script Parameters"
            }
          ],
          "children": []
        },
        {
          "file": "limitations.html",
          "name": "31 Limitations",
          "headings": [],
          "children": []
        }
      ]
    },
    {
      "file": "part-simics-programming.html",
      "name": "VI Simics API",
      "headings": [],
      "children": [
        {
          "file": "attributes.html",
          "name": "32 Attributes",
          "headings": [
            {
              "level": 1,
              "anchor": "Definition",
              "text": "Definition"
            }
          ],
          "children": []
        },
        {
          "file": "object-hierarchy.html",
          "name": "33 Object Hierarchy",
          "headings": [
            {
              "level": 1,
              "anchor": "Accessing-Objects",
              "text": "33.1 Accessing Objects"
            },
            {
              "level": 1,
              "anchor": "Object-Creation",
              "text": "33.2 Object Creation"
            },
            {
              "level": 1,
              "anchor": "Special-Object-Classes",
              "text": "33.3 Special Object Classes"
            },
            {
              "level": 1,
              "anchor": "Naming-Conventions",
              "text": "33.4 Naming Conventions"
            },
            {
              "level": 1,
              "anchor": "Object-Initialization",
              "text": "33.5 Object Initialization"
            },
            {
              "level": 1,
              "anchor": "Clock-and-Cell-Inheritance",
              "text": "33.6 Clock and Cell Inheritance"
            }
          ],
          "children": []
        },
        {
          "file": "port-objects.html",
          "name": "34 Port Objects",
          "headings": [
            {
              "level": 1,
              "anchor": "Registering-Port-Objects",
              "text": "34.1 Registering Port Objects"
            },
            {
              "level": 1,
              "anchor": "Hierarchical-Class-Names",
              "text": "34.2 Hierarchical Class Names"
            },
            {
              "level": 1,
              "anchor": "Using-Existing-Classes-as-Port-Objects",
              "text": "34.3 Using Existing Classes as Port Objects"
            },
            {
              "level": 1,
              "anchor": "Setting-Port-Object-State",
              "text": "34.4 Setting Port Object State"
            },
            {
              "level": 1,
              "anchor": "Pre-Conf-Object-Support",
              "text": "34.5 Pre Conf Object Support"
            },
            {
              "level": 1,
              "anchor": "Port-Object-Parent",
              "text": "34.6 Port Object Parent"
            }
          ],
          "children": []
        },
        {
          "file": "notifiers.html",
          "name": "35 Notifiers",
          "headings": [
            {
              "level": 1,
              "anchor": "Notifier-Subscription",
              "text": "35.1 Notifier Subscription"
            },
            {
              "level": 1,
              "anchor": "Notifier-Publication",
              "text": "35.2 Notifier Publication"
            },
            {
              "level": 1,
              "anchor": "Custom-Notifier-Types",
              "text": "35.3 Custom Notifier Types"
            },
            {
              "level": 1,
              "anchor": "Global-Notifiers",
              "text": "35.4 Global Notifiers"
            }
          ],
          "children": []
        },
        {
          "file": "extension-classes.html",
          "name": "36 Extension Classes",
          "headings": [
            {
              "level": 1,
              "anchor": "Usage-Example",
              "text": "36.1 Usage Example"
            },
            {
              "level": 1,
              "anchor": "Defining-an-Extension-Class",
              "text": "36.2 Defining an Extension Class"
            },
            {
              "level": 1,
              "anchor": "Defining-an-Extension-Class-in-Python",
              "text": "36.3 Defining an Extension Class in Python"
            }
          ],
          "children": []
        },
        {
          "file": "transactions.html",
          "name": "37 Transactions",
          "headings": [
            {
              "level": 1,
              "anchor": "Transaction-Atoms",
              "text": "37.1 Transaction Atoms"
            },
            {
              "level": 1,
              "anchor": "Transaction-Datatype",
              "text": "37.2 Transaction Datatype"
            },
            {
              "level": 1,
              "anchor": "Transaction-API-Overview",
              "text": "37.3 Transaction API Overview"
            },
            {
              "level": 1,
              "anchor": "Transaction-Interface",
              "text": "37.4 Transaction Interface"
            },
            {
              "level": 1,
              "anchor": "Synchronous-Completion",
              "text": "37.5 Synchronous Completion"
            },
            {
              "level": 1,
              "anchor": "Asynchronous-Completion",
              "text": "37.6 Asynchronous Completion"
            },
            {
              "level": 1,
              "anchor": "Creating-Transactions",
              "text": "37.7 Creating Transactions"
            },
            {
              "level": 1,
              "anchor": "Issuing-a-Synchronous-Transaction",
              "text": "37.8 Issuing a Synchronous Transaction"
            },
            {
              "level": 1,
              "anchor": "transaction-issue-async",
              "text": "37.9 Issuing an Asynchronous Transaction"
            },
            {
              "level": 1,
              "anchor": "Python-Support",
              "text": "37.10 Python Support"
            },
            {
              "level": 2,
              "anchor": "Accessing-Transaction-Atoms",
              "text": "37.10.1 Accessing Transaction Atoms"
            },
            {
              "level": 2,
              "anchor": "Sample-Code-to-Create-and-Issue-a-Transaction",
              "text": "37.10.2 Sample Code to Create and Issue a Transaction"
            },
            {
              "level": 1,
              "anchor": "Custom-Atom-Types",
              "text": "37.11 Custom Atom Types"
            },
            {
              "level": 1,
              "anchor": "Transaction-Chaining",
              "text": "37.12 Transaction Chaining"
            },
            {
              "level": 2,
              "anchor": "Transaction-Chaining-Example",
              "text": "37.12.1 Transaction Chaining Example"
            },
            {
              "level": 1,
              "anchor": "Transaction-Checkpointing",
              "text": "37.13 Transaction Checkpointing"
            },
            {
              "level": 1,
              "anchor": "Reverse-Execution",
              "text": "37.14 Reverse Execution"
            },
            {
              "level": 1,
              "anchor": "Legacy-Support",
              "text": "37.15 Legacy Support"
            },
            {
              "level": 1,
              "anchor": "Transaction-Wait",
              "text": "37.16 Transaction Wait"
            },
            {
              "level": 1,
              "anchor": "CLI-support-for-transactions",
              "text": "37.17 CLI support for transactions"
            }
          ],
          "children": []
        },
        {
          "file": "checkpoint-compatibility.html",
          "name": "38 Checkpoint Compatibility",
          "headings": [
            {
              "level": 1,
              "anchor": "First-Example-A-Simple-Case",
              "text": "38.1 First Example: A Simple Case"
            },
            {
              "level": 1,
              "anchor": "Second-Example-Changing-the-Class-of-an-Object",
              "text": "38.2 Second Example: Changing the Class of an Object"
            },
            {
              "level": 1,
              "anchor": "Third-Example-Creating-New-Objects",
              "text": "38.3 Third Example: Creating New Objects"
            },
            {
              "level": 1,
              "anchor": "Last-Example-Changing-the-Name-of-an-Object",
              "text": "38.4 Last Example: Changing the Name of an Object"
            },
            {
              "level": 1,
              "anchor": "Upgrade-Functions-in-More-Details",
              "text": "38.5 Upgrade Functions in More Details"
            },
            {
              "level": 2,
              "anchor": "Choosing-and-Setting-a-Build-Id",
              "text": "Choosing and Setting a Build-Id"
            },
            {
              "level": 2,
              "anchor": "Checkpoint-Format",
              "text": "Checkpoint Format"
            },
            {
              "level": 2,
              "anchor": "Utility-Functions",
              "text": "Utility Functions"
            },
            {
              "level": 2,
              "anchor": "Class-Upgrade-Functions",
              "text": "Class Upgrade Functions"
            },
            {
              "level": 2,
              "anchor": "Generic-Upgrade-Functions",
              "text": "Generic Upgrade Functions"
            },
            {
              "level": 2,
              "anchor": "Manipulating-Standard-Simics-Objects",
              "text": "Manipulating Standard Simics Objects"
            }
          ],
          "children": []
        }
      ]
    },
    {
      "file": "extension-builder.html",
      "name": "VII Extending Simics",
      "headings": [],
      "children": [
        {
          "file": "eb-introduction.html",
          "name": "39 Introduction",
          "headings": [
            {
              "level": 1,
              "anchor": "Processor-API",
              "text": "39.1 Processor API"
            },
            {
              "level": 1,
              "anchor": "Simulator-API",
              "text": "39.2 Simulator API"
            },
            {
              "level": 1,
              "anchor": "Building-Modules",
              "text": "39.3 Building Modules"
            }
          ],
          "children": []
        },
        {
          "file": "instrumentation.html",
          "name": "40 Instrumentation",
          "headings": [
            {
              "level": 1,
              "anchor": "instrumentation-api",
              "text": "40.1 Instrumentation API Overview"
            },
            {
              "level": 1,
              "anchor": "Tool-and-Connection-API",
              "text": "40.2 Tool and Connection API"
            },
            {
              "level": 2,
              "anchor": "Multithreading-Aspects",
              "text": "40.2.1 Multithreading Aspects"
            },
            {
              "level": 1,
              "anchor": "Instrumentation-Filter-API",
              "text": "40.3 Instrumentation Filter API"
            },
            {
              "level": 1,
              "anchor": "Provider-API",
              "text": "40.4 Provider API"
            },
            {
              "level": 2,
              "anchor": "CPU-Instrumentation-API",
              "text": "40.4.1 CPU Instrumentation API"
            }
          ],
          "children": []
        },
        {
          "file": "probes-api.html",
          "name": "41 Probes API",
          "headings": [],
          "children": []
        },
        {
          "file": "inspecting-and-controlling-the-virtual-system.html",
          "name": "42 Inspecting and Controlling the Virtual System",
          "headings": [
            {
              "level": 1,
              "anchor": "Using-Haps-to-Catch-Simulator-Events",
              "text": "42.1 Using Haps to Catch Simulator Events"
            },
            {
              "level": 2,
              "anchor": "Reacting-to-Haps",
              "text": "42.1.1 Reacting to Haps"
            },
            {
              "level": 1,
              "anchor": "Tracing-Memory-Accesses",
              "text": "42.2 Tracing Memory Accesses"
            }
          ],
          "children": []
        },
        {
          "file": "memory-and-timing.html",
          "name": "43 Memory Tracing and Timing",
          "headings": [
            {
              "level": 1,
              "anchor": "Tracing-Instruction-Execution",
              "text": "43.1 Tracing Instruction Execution"
            },
            {
              "level": 1,
              "anchor": "Tracing-Memory-Transactions",
              "text": "43.2 Tracing Memory Transactions"
            },
            {
              "level": 2,
              "anchor": "mem-transactions",
              "text": "43.2.1 Observing Memory Transactions"
            },
            {
              "level": 2,
              "anchor": "Observing-Instruction-Fetches",
              "text": "43.2.2 Observing Instruction Fetches"
            },
            {
              "level": 2,
              "anchor": "Observing-Page-table-Accesses",
              "text": "43.2.3 Observing Page-table Accesses"
            },
            {
              "level": 2,
              "anchor": "stc-description",
              "text": "43.2.4 Simulator Translation Cache (STC)"
            },
            {
              "level": 2,
              "anchor": "Summary-of-Simics-Memory-System",
              "text": "43.2.5 Summary of Simics Memory System"
            },
            {
              "level": 2,
              "anchor": "iim-implementing",
              "text": "43.2.6 Implementing the Interface"
            },
            {
              "level": 2,
              "anchor": "Chaining-Timing-Models",
              "text": "43.2.7 Chaining Timing Models"
            },
            {
              "level": 1,
              "anchor": "modifying-memtrans",
              "text": "43.3 Modifying Memory Transactions"
            },
            {
              "level": 2,
              "anchor": "Stalling-Transactions",
              "text": "43.3.1 Stalling Transactions"
            },
            {
              "level": 2,
              "anchor": "changing-mem-trans",
              "text": "43.3.2 Changing the Behavior of a Memory Transaction"
            },
            {
              "level": 3,
              "anchor": "In-a-Timing-Model",
              "text": "In a Timing Model"
            },
            {
              "level": 3,
              "anchor": "In-a-Snoop-Device",
              "text": "In a Snoop Device"
            },
            {
              "level": 1,
              "anchor": "feature-list-stall-cache",
              "text": "43.4 Memory Features Availability"
            }
          ],
          "children": []
        },
        {
          "file": "external-world.html",
          "name": "44 Connecting to the External World",
          "headings": [
            {
              "level": 1,
              "anchor": "Recording-External-Input",
              "text": "44.1 Recording External Input"
            },
            {
              "level": 2,
              "anchor": "Recording-and-Simulator-Interaction",
              "text": "44.1.1 Recording and Simulator Interaction"
            },
            {
              "level": 2,
              "anchor": "Interfacing-the-Recorder",
              "text": "44.1.2 Interfacing the Recorder"
            },
            {
              "level": 1,
              "anchor": "sockets",
              "text": "44.2 Socket Programming in Simics"
            },
            {
              "level": 1,
              "anchor": "Writing-Portable-Code",
              "text": "44.3 Writing Portable Code"
            },
            {
              "level": 1,
              "anchor": "Writing-Debugger-Connections",
              "text": "44.4 Writing Debugger Connections"
            },
            {
              "level": 2,
              "anchor": "Connect-and-Disconnect",
              "text": "44.4.1 Connect and Disconnect"
            },
            {
              "level": 2,
              "anchor": "Starting-and-Stopping-the-Simulation",
              "text": "44.4.2 Starting and Stopping the Simulation"
            },
            {
              "level": 2,
              "anchor": "Contexts-and-Process-Tracking",
              "text": "44.4.3 Contexts and Process Tracking"
            },
            {
              "level": 1,
              "anchor": "Synchronizing-Virtual-Time",
              "text": "44.5 Synchronizing Virtual Time"
            },
            {
              "level": 2,
              "anchor": "The-Time-Server-and-the-Time-Client",
              "text": "44.5.1 The Time Server and the Time Client"
            },
            {
              "level": 3,
              "anchor": "Time-Client-Library",
              "text": "44.5.1.1 Time Client Library"
            }
          ],
          "children": []
        },
        {
          "file": "time-synchronization-library.html",
          "name": "45 Time Synchronization Library",
          "headings": [
            {
              "level": 1,
              "anchor": "Introduction",
              "text": "45.1 Introduction"
            },
            {
              "level": 1,
              "anchor": "Overview",
              "text": "45.2 Overview"
            },
            {
              "level": 1,
              "anchor": "Time",
              "text": "45.3 Time"
            },
            {
              "level": 1,
              "anchor": "The-follower",
              "text": "45.4 The follower"
            },
            {
              "level": 1,
              "anchor": "The-follower-agent",
              "text": "45.5 The follower agent"
            },
            {
              "level": 1,
              "anchor": "Saving-and-restoring-configurations",
              "text": "45.6 Saving and restoring configurations"
            },
            {
              "level": 1,
              "anchor": "Code-example",
              "text": "45.7 Code example"
            }
          ],
          "children": []
        },
        {
          "file": "other-applications.html",
          "name": "46 Integrating with Other Applications",
          "headings": [
            {
              "level": 1,
              "anchor": "Linking-Simics-into-Another-Application",
              "text": "46.1 Linking Simics into Another Application"
            },
            {
              "level": 1,
              "anchor": "Integrating-Another-Application-into-Simics",
              "text": "46.2 Integrating Another Application into Simics"
            }
          ],
          "children": []
        },
        {
          "file": "writing-hypersim-patterns.html",
          "name": "47 Writing Hypersim Patterns",
          "headings": [
            {
              "level": 1,
              "anchor": "Overview",
              "text": "47.1 Overview"
            },
            {
              "level": 2,
              "anchor": "finding-loop",
              "text": "47.1.1 Locating Idle Loops"
            },
            {
              "level": 2,
              "anchor": "create-pattern",
              "text": "47.1.2 Creating Pattern Classes"
            },
            {
              "level": 2,
              "anchor": "determine-conditions",
              "text": "47.1.3 Determine Conditions"
            },
            {
              "level": 2,
              "anchor": "test-correctness",
              "text": "47.1.4 Test Correctness"
            },
            {
              "level": 2,
              "anchor": "measure-improvements",
              "text": "47.1.5 Measure Performance Improvements"
            },
            {
              "level": 1,
              "anchor": "Advanced-Topics",
              "text": "47.2 Advanced Topics"
            },
            {
              "level": 2,
              "anchor": "small-variations",
              "text": "47.2.1 Handling Small Variations in Patterns"
            },
            {
              "level": 2,
              "anchor": "subpatterns",
              "text": "47.2.2 Subpatterns"
            },
            {
              "level": 2,
              "anchor": "timing-dependent",
              "text": "47.2.3 Handling Time-Dependent Loops"
            },
            {
              "level": 2,
              "anchor": "object-structure",
              "text": "47.2.4 Object Structure"
            },
            {
              "level": 1,
              "anchor": "References",
              "text": "47.3 References"
            }
          ],
          "children": []
        },
        {
          "file": "writing-os-awareness-software-trackers.html",
          "name": "48 Writing OS Awareness Software Trackers",
          "headings": [
            {
              "level": 1,
              "anchor": "Basic-concepts-of-the-software-tracker",
              "text": "48.1 Basic concepts of the software tracker"
            },
            {
              "level": 2,
              "anchor": "osa_tracker_state",
              "text": "48.1.1 Framework benefits"
            },
            {
              "level": 2,
              "anchor": "osa_node_tree",
              "text": "48.1.2 Node tree"
            },
            {
              "level": 2,
              "anchor": "Empty-skeleton-from-a-tracker",
              "text": "48.1.3 Empty skeleton from a tracker"
            },
            {
              "level": 2,
              "anchor": "Linux-tracker-example",
              "text": "48.1.4 Linux tracker example"
            },
            {
              "level": 1,
              "anchor": "Writing-a-Tracker",
              "text": "48.2 Writing a Tracker"
            },
            {
              "level": 2,
              "anchor": "Tracker-and-mapper-communication",
              "text": "48.2.1 Tracker and mapper communication"
            },
            {
              "level": 3,
              "anchor": "osa_tracker_state_admin",
              "text": "48.2.1.1 osa_tracker_state_admin interface"
            },
            {
              "level": 2,
              "anchor": "Retrieving-and-monitoring-the-machine-state",
              "text": "48.2.2 Retrieving and monitoring the machine state"
            },
            {
              "level": 3,
              "anchor": "osa_machine_query-interface",
              "text": "48.2.2.1 osa_machine_query interface"
            },
            {
              "level": 3,
              "anchor": "osa_machine_notification-interface",
              "text": "48.2.2.2 osa_machine_notification interface"
            },
            {
              "level": 2,
              "anchor": "Interfaces-that-the-tracker-is-required-to-implement",
              "text": "48.2.3 Interfaces that the tracker is required to implement"
            },
            {
              "level": 3,
              "anchor": "osa_tracker_control-interface",
              "text": "48.2.3.1 osa_tracker_control interface"
            },
            {
              "level": 1,
              "anchor": "Writing-a-Mapper",
              "text": "48.3 Writing a Mapper"
            },
            {
              "level": 2,
              "anchor": "Interfaces-that-the-mapper-should-implement",
              "text": "48.3.1 Interfaces that the mapper should implement"
            },
            {
              "level": 3,
              "anchor": "osa_mapper_control-interface",
              "text": "48.3.1.1 osa_mapper_control interface"
            },
            {
              "level": 3,
              "anchor": "osa_mapper_admin-interface",
              "text": "48.3.1.2 osa_mapper_admin interface"
            },
            {
              "level": 3,
              "anchor": "osa_mapper_query-interface",
              "text": "48.3.1.3 osa_mapper_query interface"
            },
            {
              "level": 2,
              "anchor": "retrieving-tracker-state",
              "text": "48.3.2 Retrieving tracker state"
            },
            {
              "level": 3,
              "anchor": "osa_tracker_state_query",
              "text": "48.3.2.1 osa_tracker_state_query"
            },
            {
              "level": 3,
              "anchor": "osa_tracker_state_notification",
              "text": "48.3.2.2 osa_tracker_state_notification"
            },
            {
              "level": 2,
              "anchor": "Creating-a-node-tree",
              "text": "48.3.3 Creating a node tree"
            },
            {
              "level": 3,
              "anchor": "osa_node_tree_admin",
              "text": "48.3.3.1 osa_node_tree_admin interface"
            },
            {
              "level": 3,
              "anchor": "Properties-with-special-meaning",
              "text": "48.3.3.2 Properties with special meaning"
            },
            {
              "level": 1,
              "anchor": "Writing-a-Composition-Class",
              "text": "48.4 Writing a Composition Class"
            },
            {
              "level": 2,
              "anchor": "Creating-the-composition-class",
              "text": "48.4.1 Creating the composition class"
            },
            {
              "level": 2,
              "anchor": "Methods-that-need-to-be-implemented",
              "text": "48.4.2 Methods that need to be implemented"
            },
            {
              "level": 2,
              "anchor": "Supporting-Parameters",
              "text": "48.4.3 Supporting Parameters"
            },
            {
              "level": 1,
              "anchor": "osa_checkpointing",
              "text": "48.5 Checkpointing"
            },
            {
              "level": 2,
              "anchor": "Support-checkpointing-in-models",
              "text": "48.5.1 Support checkpointing in models"
            },
            {
              "level": 2,
              "anchor": "Micro-checkpointing",
              "text": "48.5.2 Micro-checkpointing"
            }
          ],
          "children": []
        }
      ]
    }
  ]
}