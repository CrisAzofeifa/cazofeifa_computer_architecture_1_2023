{
  "is_book": false,
  "anchor": "reference_manuals",
  "file": "index.html",
  "name": "API Reference Manual",
  "headings": [],
  "children": [
    {
      "file": "introduction.html",
      "name": "1 Introduction",
      "headings": [],
      "children": [
        {
          "file": "programming-concepts.html",
          "name": "1.1 Programming Concepts",
          "headings": [
            {
              "level": 1,
              "anchor": "classes-modules-and-objects",
              "text": "1.1.1 Classes and Objects"
            },
            {
              "level": 1,
              "anchor": "Type",
              "text": "1.1.2 Type"
            },
            {
              "level": 1,
              "anchor": "Interfaces",
              "text": "1.1.3 Interfaces"
            },
            {
              "level": 1,
              "anchor": "Logging",
              "text": "1.1.4 Logging"
            },
            {
              "level": 1,
              "anchor": "Events",
              "text": "1.1.5 Events"
            },
            {
              "level": 1,
              "anchor": "Haps",
              "text": "1.1.6 Haps"
            },
            {
              "level": 1,
              "anchor": "Commands",
              "text": "1.1.7 Commands"
            }
          ],
          "children": []
        },
        {
          "file": "simics-api-information.html",
          "name": "1.2 Simics API Information",
          "headings": [
            {
              "level": 1,
              "anchor": "spc-api-parts",
              "text": "1.2.1 The Simics API"
            },
            {
              "level": 2,
              "anchor": "Device-API",
              "text": "1.2.1.1 Device API"
            },
            {
              "level": 2,
              "anchor": "Model-to-Model-Interfaces",
              "text": "1.2.1.2 Model-to-Model Interfaces"
            },
            {
              "level": 2,
              "anchor": "Model-to-Simulator-Interfaces",
              "text": "1.2.1.3 Model-to-Simulator Interfaces"
            },
            {
              "level": 2,
              "anchor": "Simulator-API",
              "text": "1.2.1.4 Simulator API"
            },
            {
              "level": 2,
              "anchor": "Simulator-to-Simulator-Interfaces",
              "text": "1.2.1.5 Simulator-to-Simulator Interfaces"
            },
            {
              "level": 2,
              "anchor": "Processor-API",
              "text": "1.2.1.6 Processor API"
            },
            {
              "level": 2,
              "anchor": "Link-Library-API",
              "text": "1.2.1.7 Link Library API"
            },
            {
              "level": 2,
              "anchor": "Python-API",
              "text": "1.2.1.8 Python API"
            },
            {
              "level": 1,
              "anchor": "API-Version",
              "text": "1.2.2 API Version"
            },
            {
              "level": 1,
              "anchor": "System-Calls-and-Signals",
              "text": "1.2.3 System Calls and Signals"
            },
            {
              "level": 1,
              "anchor": "Text-Output",
              "text": "1.2.4 Text Output"
            },
            {
              "level": 1,
              "anchor": "Using-Threads-in-Simics-Modules",
              "text": "1.2.5 Using Threads in Simics Modules"
            },
            {
              "level": 1,
              "anchor": "Header-Inclusion-Order",
              "text": "1.2.6 Header Inclusion Order"
            }
          ],
          "children": []
        },
        {
          "file": "api-usage-rules.html",
          "name": "1.3 API usage rules",
          "headings": [
            {
              "level": 1,
              "anchor": "Simics-API-value-ownership-rules",
              "text": "1.3.1 Simics API value ownership rules"
            },
            {
              "level": 1,
              "anchor": "api-execution-contexts",
              "text": "1.3.2 API Execution Contexts"
            }
          ],
          "children": []
        },
        {
          "file": "simics-api-syntax.html",
          "name": "1.4 Simics API Syntax",
          "headings": [],
          "children": []
        }
      ]
    },
    {
      "file": "rmapi-threading-model.html",
      "name": "2 Threading Model",
      "headings": [],
      "children": [
        {
          "file": "multithreading-overview.html",
          "name": "2.1 Overview",
          "headings": [],
          "children": []
        },
        {
          "file": "basic-module-requirements.html",
          "name": "2.2 Basic Module Requirements",
          "headings": [],
          "children": []
        },
        {
          "file": "multithreading-simulation-cells.html",
          "name": "2.3 Simulation Cells",
          "headings": [
            {
              "level": 1,
              "anchor": "Cells-and-Components",
              "text": "2.3.1 Cells and Components"
            },
            {
              "level": 1,
              "anchor": "Compatibility",
              "text": "2.3.2 Compatibility"
            },
            {
              "level": 1,
              "anchor": "Verifying-the-Cell-Partitioning",
              "text": "2.3.3 Verifying the Cell Partitioning"
            },
            {
              "level": 1,
              "anchor": "Link-Objects",
              "text": "2.3.4 Links"
            },
            {
              "level": 1,
              "anchor": "Synchronization-domains",
              "text": "2.3.5 Synchronization domains"
            }
          ],
          "children": []
        },
        {
          "file": "multithreading-thread-domains.html",
          "name": "2.4 Thread Domains",
          "headings": [
            {
              "level": 1,
              "anchor": "multithreading-execution-context",
              "text": "2.4.1 Relationship with API Execution Context"
            },
            {
              "level": 1,
              "anchor": "thread-domains-primitive",
              "text": "2.4.2 Lock Semantics"
            },
            {
              "level": 1,
              "anchor": "thread-domains-contention",
              "text": "2.4.3 Contention"
            },
            {
              "level": 1,
              "anchor": "thread-domains-retention",
              "text": "2.4.4 Domain Retention"
            }
          ],
          "children": []
        },
        {
          "file": "multithreading-concurrency-modes.html",
          "name": "2.5 Concurrency Modes",
          "headings": [
            {
              "level": 1,
              "anchor": "Mode-Selection",
              "text": "2.5.1 Mode Selection"
            },
            {
              "level": 1,
              "anchor": "Thread-Domain-Groups",
              "text": "2.5.2 Thread Domain Groups"
            }
          ],
          "children": []
        },
        {
          "file": "multithreading-standard-device-model.html",
          "name": "2.6 Standard Device Model",
          "headings": [
            {
              "level": 1,
              "anchor": "multithreading-standard-device-model-properties",
              "text": "2.6.1 Properties"
            }
          ],
          "children": []
        },
        {
          "file": "multithreading-threaded-cpu.html",
          "name": "2.7 Threaded Device Model",
          "headings": [
            {
              "level": 1,
              "anchor": "Programming-Model",
              "text": "2.7.1 Programming Model"
            },
            {
              "level": 1,
              "anchor": "Domain-Boundary-Crossings",
              "text": "2.7.2 Domain Boundary Crossings"
            },
            {
              "level": 1,
              "anchor": "Mixing-Thread-Domains-and-Mutexes",
              "text": "2.7.3 Mixing Thread Domains and Mutexes"
            },
            {
              "level": 1,
              "anchor": "Thread-Aware-CPUs",
              "text": "2.7.4 Thread-Aware CPUs"
            },
            {
              "level": 1,
              "anchor": "Thread-Domain-Contention",
              "text": "2.7.5 Thread Domain Contention"
            }
          ],
          "children": []
        },
        {
          "file": "multithreading-threads.html",
          "name": "2.8 Foreign Threads",
          "headings": [
            {
              "level": 1,
              "anchor": "multithreading-threads-operations",
              "text": "2.8.1 Device Interactions"
            }
          ],
          "children": []
        },
        {
          "file": "multithreading-scheduler.html",
          "name": "2.9 Simics Scheduler",
          "headings": [
            {
              "level": 1,
              "anchor": "multithreading-scheduler-basic",
              "text": "2.9.1 Basic Operation"
            },
            {
              "level": 1,
              "anchor": "multithreading-scheduler-sync",
              "text": "2.9.2 Virtual Time Synchronization"
            }
          ],
          "children": []
        }
      ]
    },
    {
      "file": "device-api.html",
      "name": "3 Device API",
      "headings": [],
      "children": [
        {
          "file": "frontend-exceptions.html",
          "name": "3.1 Frontend Exceptions",
          "headings": [],
          "children": []
        },
        {
          "file": "device-api-data-types.html",
          "name": "3.2 Device API Data Types",
          "headings": [
            {
              "level": 1,
              "anchor": "Generic-Data-Types",
              "text": "3.2.1 Generic Data Types"
            },
            {
              "level": 2,
              "anchor": "attr_value_t",
              "text": "attr_value_t"
            },
            {
              "level": 2,
              "anchor": "buffer_t",
              "text": "buffer_t"
            },
            {
              "level": 2,
              "anchor": "bytes_t",
              "text": "bytes_t"
            },
            {
              "level": 2,
              "anchor": "cbdata_t-cbdata_call_t-cbdata_register_t-cbdata_type_t",
              "text": "cbdata_t, cbdata_call_t, cbdata_register_t, cbdata_type_t"
            },
            {
              "level": 2,
              "anchor": "class_data_t",
              "text": "class_data_t"
            },
            {
              "level": 2,
              "anchor": "class_info_t",
              "text": "class_info_t"
            },
            {
              "level": 2,
              "anchor": "conf_object_t",
              "text": "conf_object_t"
            },
            {
              "level": 2,
              "anchor": "data_or_instr_t",
              "text": "data_or_instr_t"
            },
            {
              "level": 2,
              "anchor": "endianness_t",
              "text": "endianness_t"
            },
            {
              "level": 2,
              "anchor": "exception_type_t",
              "text": "exception_type_t"
            },
            {
              "level": 2,
              "anchor": "generic_transaction_t",
              "text": "generic_transaction_t"
            },
            {
              "level": 2,
              "anchor": "hap_type_t",
              "text": "hap_type_t"
            },
            {
              "level": 2,
              "anchor": "init_arg_t",
              "text": "init_arg_t"
            },
            {
              "level": 2,
              "anchor": "int8-int16-int32-int64-uint8-uint16-uint32-uint64-intptr_t-uintptr_t-integer_t-uinteger_t",
              "text": "int8, int16, int32, int64, uint8, uint16, uint32, uint64, intptr_t, uintptr_t, integer_t, uinteger_t"
            },
            {
              "level": 2,
              "anchor": "lang_void",
              "text": "lang_void"
            },
            {
              "level": 2,
              "anchor": "logical_address_t-physical_address_t-generic_address_t-linear_address_t",
              "text": "logical_address_t, physical_address_t, generic_address_t, linear_address_t"
            },
            {
              "level": 2,
              "anchor": "map_info_t",
              "text": "map_info_t"
            },
            {
              "level": 2,
              "anchor": "map_list_t",
              "text": "map_list_t"
            },
            {
              "level": 2,
              "anchor": "map_target_t",
              "text": "map_target_t"
            },
            {
              "level": 2,
              "anchor": "mem_op_type_t",
              "text": "mem_op_type_t"
            },
            {
              "level": 2,
              "anchor": "processor_mode_t",
              "text": "processor_mode_t"
            },
            {
              "level": 2,
              "anchor": "read_or_write_t",
              "text": "read_or_write_t"
            },
            {
              "level": 2,
              "anchor": "set_error_t",
              "text": "set_error_t"
            },
            {
              "level": 2,
              "anchor": "simtime_t-cycles_t-pc_step_t-nano_secs_t",
              "text": "simtime_t, cycles_t, pc_step_t, nano_secs_t"
            },
            {
              "level": 2,
              "anchor": "translation_t",
              "text": "translation_t"
            },
            {
              "level": 1,
              "anchor": "Model-Specific-Data-Types",
              "text": "3.2.2 Model Specific Data Types"
            },
            {
              "level": 2,
              "anchor": "arm_device_type_t",
              "text": "arm_device_type_t"
            },
            {
              "level": 2,
              "anchor": "arm_mem_attr_t",
              "text": "arm_mem_attr_t"
            },
            {
              "level": 2,
              "anchor": "arm_mem_hint_t",
              "text": "arm_mem_hint_t"
            },
            {
              "level": 2,
              "anchor": "arm_mem_instr_origin_t",
              "text": "arm_mem_instr_origin_t"
            },
            {
              "level": 2,
              "anchor": "arm_mem_transient_t",
              "text": "arm_mem_transient_t"
            },
            {
              "level": 2,
              "anchor": "arm_mem_type_t",
              "text": "arm_mem_type_t"
            },
            {
              "level": 2,
              "anchor": "arm_memory_attributes_encoding_t",
              "text": "arm_memory_attributes_encoding_t"
            },
            {
              "level": 2,
              "anchor": "arm_memory_transaction_t",
              "text": "arm_memory_transaction_t"
            },
            {
              "level": 2,
              "anchor": "arm_smmu_attributes_t",
              "text": "arm_smmu_attributes_t"
            },
            {
              "level": 2,
              "anchor": "arm_translation_regime_t",
              "text": "arm_translation_regime_t"
            },
            {
              "level": 2,
              "anchor": "i2c_status_t",
              "text": "i2c_status_t"
            },
            {
              "level": 2,
              "anchor": "mips_memory_transaction_t",
              "text": "mips_memory_transaction_t"
            },
            {
              "level": 2,
              "anchor": "nios_memory_transaction_t",
              "text": "nios_memory_transaction_t"
            },
            {
              "level": 2,
              "anchor": "pci_memory_transaction_t",
              "text": "pci_memory_transaction_t"
            },
            {
              "level": 2,
              "anchor": "ppc_mem_instr_origin_t",
              "text": "ppc_mem_instr_origin_t"
            },
            {
              "level": 2,
              "anchor": "ppc_memory_transaction_t",
              "text": "ppc_memory_transaction_t"
            },
            {
              "level": 2,
              "anchor": "riscv_cpu_mode_t",
              "text": "riscv_cpu_mode_t"
            },
            {
              "level": 2,
              "anchor": "serial_peripheral_interface_flags_t",
              "text": "serial_peripheral_interface_flags_t"
            },
            {
              "level": 2,
              "anchor": "usb_transfer_t",
              "text": "usb_transfer_t"
            },
            {
              "level": 2,
              "anchor": "x86_memory_transaction_t",
              "text": "x86_memory_transaction_t"
            },
            {
              "level": 2,
              "anchor": "x86_sync_instruction_type_t",
              "text": "x86_sync_instruction_type_t"
            },
            {
              "level": 2,
              "anchor": "xtensa_memory_transaction_t",
              "text": "xtensa_memory_transaction_t"
            },
            {
              "level": 1,
              "anchor": "Internal-Data-Types",
              "text": "3.2.3 Internal Data Types"
            },
            {
              "level": 2,
              "anchor": "Collection-of-Internal-Data-Types",
              "text": "Collection of Internal Data Types"
            }
          ],
          "children": []
        },
        {
          "file": "device-api-functions.html",
          "name": "3.3 Device API Functions",
          "headings": [
            {
              "level": 1,
              "anchor": "Attribute-Values",
              "text": "Attribute Values"
            },
            {
              "level": 2,
              "anchor": "SIM_alloc_attr_dict",
              "text": "SIM_alloc_attr_dict()"
            },
            {
              "level": 2,
              "anchor": "SIM_alloc_attr_list",
              "text": "SIM_alloc_attr_list()"
            },
            {
              "level": 2,
              "anchor": "SIM_attr_copy",
              "text": "SIM_attr_copy()"
            },
            {
              "level": 2,
              "anchor": "SIM_attr_dict_resize",
              "text": "SIM_attr_dict_resize()"
            },
            {
              "level": 2,
              "anchor": "SIM_attr_dict_set_item",
              "text": "SIM_attr_dict_set_item()"
            },
            {
              "level": 2,
              "anchor": "SIM_attr_free",
              "text": "SIM_attr_free()"
            },
            {
              "level": 2,
              "anchor": "SIM_attr_integer",
              "text": "SIM_attr_integer()"
            },
            {
              "level": 2,
              "anchor": "SIM_attr_is_integer",
              "text": "SIM_attr_is_integer()"
            },
            {
              "level": 2,
              "anchor": "SIM_attr_list_resize",
              "text": "SIM_attr_list_resize()"
            },
            {
              "level": 2,
              "anchor": "SIM_attr_list_set_item",
              "text": "SIM_attr_list_set_item()"
            },
            {
              "level": 2,
              "anchor": "SIM_attr_scanf",
              "text": "SIM_attr_scanf()"
            },
            {
              "level": 2,
              "anchor": "SIM_make_attr_boolean",
              "text": "SIM_make_attr_boolean()"
            },
            {
              "level": 2,
              "anchor": "SIM_make_attr_data",
              "text": "SIM_make_attr_data()"
            },
            {
              "level": 2,
              "anchor": "SIM_make_attr_floating",
              "text": "SIM_make_attr_floating()"
            },
            {
              "level": 2,
              "anchor": "SIM_make_attr_int64",
              "text": "SIM_make_attr_int64()"
            },
            {
              "level": 2,
              "anchor": "SIM_make_attr_invalid",
              "text": "SIM_make_attr_invalid()"
            },
            {
              "level": 2,
              "anchor": "SIM_make_attr_list",
              "text": "SIM_make_attr_list()"
            },
            {
              "level": 2,
              "anchor": "SIM_make_attr_nil",
              "text": "SIM_make_attr_nil()"
            },
            {
              "level": 2,
              "anchor": "SIM_make_attr_object",
              "text": "SIM_make_attr_object()"
            },
            {
              "level": 2,
              "anchor": "SIM_make_attr_string",
              "text": "SIM_make_attr_string()"
            },
            {
              "level": 1,
              "anchor": "Configuration",
              "text": "Configuration"
            },
            {
              "level": 2,
              "anchor": "SIM_attribute_error",
              "text": "SIM_attribute_error()"
            },
            {
              "level": 2,
              "anchor": "SIM_class_port",
              "text": "SIM_class_port()"
            },
            {
              "level": 2,
              "anchor": "SIM_copy_class",
              "text": "SIM_copy_class()"
            },
            {
              "level": 2,
              "anchor": "SIM_create_class",
              "text": "SIM_create_class()"
            },
            {
              "level": 2,
              "anchor": "SIM_describe_notifier",
              "text": "SIM_describe_notifier()"
            },
            {
              "level": 2,
              "anchor": "SIM_ensure_partial_attr_order",
              "text": "SIM_ensure_partial_attr_order()"
            },
            {
              "level": 2,
              "anchor": "SIM_extend_class",
              "text": "SIM_extend_class()"
            },
            {
              "level": 2,
              "anchor": "SIM_extension_data",
              "text": "SIM_extension_data()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_class",
              "text": "SIM_get_class()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_class_data",
              "text": "SIM_get_class_data()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_class_name",
              "text": "SIM_get_class_name()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_interface",
              "text": "SIM_get_interface()"
            },
            {
              "level": 2,
              "anchor": "SIM_is_loading_micro_checkpoint",
              "text": "SIM_is_loading_micro_checkpoint()"
            },
            {
              "level": 2,
              "anchor": "SIM_is_restoring_state",
              "text": "SIM_is_restoring_state()"
            },
            {
              "level": 2,
              "anchor": "SIM_marked_for_deletion",
              "text": "SIM_marked_for_deletion()"
            },
            {
              "level": 2,
              "anchor": "SIM_notifier_type",
              "text": "SIM_notifier_type()"
            },
            {
              "level": 2,
              "anchor": "SIM_object_clock",
              "text": "SIM_object_clock()"
            },
            {
              "level": 2,
              "anchor": "SIM_object_data",
              "text": "SIM_object_data()"
            },
            {
              "level": 2,
              "anchor": "SIM_object_id",
              "text": "SIM_object_id()"
            },
            {
              "level": 2,
              "anchor": "SIM_object_is_configured",
              "text": "SIM_object_is_configured()"
            },
            {
              "level": 2,
              "anchor": "SIM_object_name",
              "text": "SIM_object_name()"
            },
            {
              "level": 2,
              "anchor": "SIM_picosecond_clock",
              "text": "SIM_picosecond_clock()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_attribute",
              "text": "SIM_register_attribute()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_class",
              "text": "SIM_register_class()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_class_alias",
              "text": "SIM_register_class_alias()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_clock",
              "text": "SIM_register_clock()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_compatible_interfaces",
              "text": "SIM_register_compatible_interfaces()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_interface",
              "text": "SIM_register_interface()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_notifier",
              "text": "SIM_register_notifier()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_port",
              "text": "SIM_register_port()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_simple_port",
              "text": "SIM_register_simple_port()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_typed_attribute",
              "text": "SIM_register_typed_attribute()"
            },
            {
              "level": 2,
              "anchor": "SIM_require_object",
              "text": "SIM_require_object()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_attribute_default",
              "text": "SIM_set_attribute_default()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_class_data",
              "text": "SIM_set_class_data()"
            },
            {
              "level": 1,
              "anchor": "Callbacks",
              "text": "Callbacks"
            },
            {
              "level": 2,
              "anchor": "SIM_cbdata_data",
              "text": "SIM_cbdata_data()"
            },
            {
              "level": 2,
              "anchor": "SIM_cbdata_type",
              "text": "SIM_cbdata_type()"
            },
            {
              "level": 2,
              "anchor": "SIM_free_cbdata",
              "text": "SIM_free_cbdata()"
            },
            {
              "level": 2,
              "anchor": "SIM_make_cbdata",
              "text": "SIM_make_cbdata()"
            },
            {
              "level": 2,
              "anchor": "SIM_make_simple_cbdata",
              "text": "SIM_make_simple_cbdata()"
            },
            {
              "level": 1,
              "anchor": "Errors-and-Exceptions",
              "text": "Errors and Exceptions"
            },
            {
              "level": 2,
              "anchor": "SIM_clear_exception",
              "text": "SIM_clear_exception()"
            },
            {
              "level": 2,
              "anchor": "SIM_describe_pseudo_exception",
              "text": "SIM_describe_pseudo_exception()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_pending_exception",
              "text": "SIM_get_pending_exception()"
            },
            {
              "level": 2,
              "anchor": "SIM_last_error",
              "text": "SIM_last_error()"
            },
            {
              "level": 1,
              "anchor": "Notifiers",
              "text": "Notifiers"
            },
            {
              "level": 2,
              "anchor": "SIM_add_notifier",
              "text": "SIM_add_notifier()"
            },
            {
              "level": 2,
              "anchor": "SIM_class_has_notifier",
              "text": "SIM_class_has_notifier()"
            },
            {
              "level": 2,
              "anchor": "SIM_delete_notifier",
              "text": "SIM_delete_notifier()"
            },
            {
              "level": 2,
              "anchor": "SIM_has_notifier",
              "text": "SIM_has_notifier()"
            },
            {
              "level": 2,
              "anchor": "SIM_notify",
              "text": "SIM_notify()"
            },
            {
              "level": 1,
              "anchor": "Global-notifiers",
              "text": "Global notifiers"
            },
            {
              "level": 2,
              "anchor": "SIM_add_global_notifier",
              "text": "SIM_add_global_notifier()"
            },
            {
              "level": 2,
              "anchor": "SIM_add_global_notifier_once",
              "text": "SIM_add_global_notifier_once()"
            },
            {
              "level": 2,
              "anchor": "SIM_delete_global_notifier",
              "text": "SIM_delete_global_notifier()"
            },
            {
              "level": 1,
              "anchor": "Haps",
              "text": "Haps"
            },
            {
              "level": 2,
              "anchor": "SIM_hap_add_type",
              "text": "SIM_hap_add_type()"
            },
            {
              "level": 2,
              "anchor": "SIM_hap_get_name",
              "text": "SIM_hap_get_name()"
            },
            {
              "level": 2,
              "anchor": "SIM_hap_get_number",
              "text": "SIM_hap_get_number()"
            },
            {
              "level": 2,
              "anchor": "SIM_hap_is_active",
              "text": "SIM_hap_is_active()"
            },
            {
              "level": 2,
              "anchor": "SIM_hap_occurred_always",
              "text": "SIM_hap_occurred_always()"
            },
            {
              "level": 2,
              "anchor": "SIM_hap_remove_type",
              "text": "SIM_hap_remove_type()"
            },
            {
              "level": 1,
              "anchor": "Logging",
              "text": "Logging"
            },
            {
              "level": 2,
              "anchor": "SIM_log_info",
              "text": "SIM_log_info()"
            },
            {
              "level": 2,
              "anchor": "SIM_log_level",
              "text": "SIM_log_level()"
            },
            {
              "level": 2,
              "anchor": "SIM_log_register_groups",
              "text": "SIM_log_register_groups()"
            },
            {
              "level": 1,
              "anchor": "Transaction-Types",
              "text": "Transaction Types"
            },
            {
              "level": 2,
              "anchor": "atom_id_t",
              "text": "atom_id_t"
            },
            {
              "level": 2,
              "anchor": "atom_t",
              "text": "atom_t"
            },
            {
              "level": 2,
              "anchor": "transaction_completion_t",
              "text": "transaction_completion_t"
            },
            {
              "level": 2,
              "anchor": "transaction_flags_t",
              "text": "transaction_flags_t"
            },
            {
              "level": 2,
              "anchor": "transaction_t",
              "text": "transaction_t"
            },
            {
              "level": 1,
              "anchor": "Transactions",
              "text": "Transactions"
            },
            {
              "level": 2,
              "anchor": "ATOM_flags",
              "text": "ATOM_flags()"
            },
            {
              "level": 2,
              "anchor": "SIM_complete_transaction",
              "text": "SIM_complete_transaction()"
            },
            {
              "level": 2,
              "anchor": "SIM_defer_owned_transaction",
              "text": "SIM_defer_owned_transaction()"
            },
            {
              "level": 2,
              "anchor": "SIM_defer_transaction",
              "text": "SIM_defer_transaction()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_transaction_bytes",
              "text": "SIM_get_transaction_bytes()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_transaction_id",
              "text": "SIM_get_transaction_id()"
            },
            {
              "level": 2,
              "anchor": "SIM_inspect_address_routing",
              "text": "SIM_inspect_address_routing()"
            },
            {
              "level": 2,
              "anchor": "SIM_inspect_breakpoints",
              "text": "SIM_inspect_breakpoints()"
            },
            {
              "level": 2,
              "anchor": "SIM_issue_transaction",
              "text": "SIM_issue_transaction()"
            },
            {
              "level": 2,
              "anchor": "SIM_monitor_transaction",
              "text": "SIM_monitor_transaction()"
            },
            {
              "level": 2,
              "anchor": "SIM_poll_transaction",
              "text": "SIM_poll_transaction()"
            },
            {
              "level": 2,
              "anchor": "SIM_reconnect_transaction",
              "text": "SIM_reconnect_transaction()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_python_atom_type",
              "text": "SIM_register_python_atom_type()"
            },
            {
              "level": 2,
              "anchor": "SIM_replace_transaction",
              "text": "SIM_replace_transaction()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_transaction_bytes",
              "text": "SIM_set_transaction_bytes()"
            },
            {
              "level": 2,
              "anchor": "SIM_transaction_flags",
              "text": "SIM_transaction_flags()"
            },
            {
              "level": 2,
              "anchor": "SIM_transaction_initiator",
              "text": "SIM_transaction_initiator()"
            },
            {
              "level": 2,
              "anchor": "SIM_transaction_is_deferrable",
              "text": "SIM_transaction_is_deferrable()"
            },
            {
              "level": 2,
              "anchor": "SIM_transaction_size",
              "text": "SIM_transaction_size()"
            },
            {
              "level": 2,
              "anchor": "SIM_transaction_wait",
              "text": "SIM_transaction_wait()"
            },
            {
              "level": 1,
              "anchor": "Memory-Transactions",
              "text": "Memory Transactions"
            },
            {
              "level": 2,
              "anchor": "SIM_arm_mem_trans_from_generic",
              "text": "SIM_arm_mem_trans_from_generic()"
            },
            {
              "level": 2,
              "anchor": "SIM_c_get_mem_op_value_buf",
              "text": "SIM_c_get_mem_op_value_buf()"
            },
            {
              "level": 2,
              "anchor": "SIM_c_set_mem_op_value_buf",
              "text": "SIM_c_set_mem_op_value_buf()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_mem_op_page_cross",
              "text": "SIM_get_mem_op_page_cross()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_mem_op_size",
              "text": "SIM_get_mem_op_size()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_mem_op_type",
              "text": "SIM_get_mem_op_type()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_mem_op_type_name",
              "text": "SIM_get_mem_op_type_name()"
            },
            {
              "level": 2,
              "anchor": "SIM_make_mem_op_write",
              "text": "SIM_make_mem_op_write()"
            },
            {
              "level": 2,
              "anchor": "SIM_mem_op_ensure_future_visibility",
              "text": "SIM_mem_op_ensure_future_visibility()"
            },
            {
              "level": 2,
              "anchor": "SIM_mem_op_is_atomic",
              "text": "SIM_mem_op_is_atomic()"
            },
            {
              "level": 2,
              "anchor": "SIM_mem_op_is_control",
              "text": "SIM_mem_op_is_control()"
            },
            {
              "level": 2,
              "anchor": "SIM_mem_op_is_data",
              "text": "SIM_mem_op_is_data()"
            },
            {
              "level": 2,
              "anchor": "SIM_mem_op_is_from_cache",
              "text": "SIM_mem_op_is_from_cache()"
            },
            {
              "level": 2,
              "anchor": "SIM_mem_op_is_from_cpu",
              "text": "SIM_mem_op_is_from_cpu()"
            },
            {
              "level": 2,
              "anchor": "SIM_mem_op_is_from_cpu_arch",
              "text": "SIM_mem_op_is_from_cpu_arch()"
            },
            {
              "level": 2,
              "anchor": "SIM_mem_op_is_from_device",
              "text": "SIM_mem_op_is_from_device()"
            },
            {
              "level": 2,
              "anchor": "SIM_mem_op_is_prefetch",
              "text": "SIM_mem_op_is_prefetch()"
            },
            {
              "level": 2,
              "anchor": "SIM_mem_op_is_read",
              "text": "SIM_mem_op_is_read()"
            },
            {
              "level": 2,
              "anchor": "SIM_mem_op_may_stall",
              "text": "SIM_mem_op_may_stall()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_mem_op_exception",
              "text": "SIM_set_mem_op_exception()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_mem_op_initiator",
              "text": "SIM_set_mem_op_initiator()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_mem_op_inquiry",
              "text": "SIM_set_mem_op_inquiry()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_mem_op_physical_address",
              "text": "SIM_set_mem_op_physical_address()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_mem_op_reissue",
              "text": "SIM_set_mem_op_reissue()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_mem_op_type",
              "text": "SIM_set_mem_op_type()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_mem_op_user_data",
              "text": "SIM_set_mem_op_user_data()"
            },
            {
              "level": 1,
              "anchor": "Device-Translators",
              "text": "Device Translators"
            },
            {
              "level": 2,
              "anchor": "SIM_free_map_target",
              "text": "SIM_free_map_target()"
            },
            {
              "level": 2,
              "anchor": "SIM_map_target_flush",
              "text": "SIM_map_target_flush()"
            },
            {
              "level": 2,
              "anchor": "SIM_map_target_object",
              "text": "SIM_map_target_object()"
            },
            {
              "level": 2,
              "anchor": "SIM_new_map_target",
              "text": "SIM_new_map_target()"
            },
            {
              "level": 2,
              "anchor": "SIM_translation_changed",
              "text": "SIM_translation_changed()"
            },
            {
              "level": 1,
              "anchor": "Time-and-Events",
              "text": "Time and Events"
            },
            {
              "level": 2,
              "anchor": "SIM_cycle_count",
              "text": "SIM_cycle_count()"
            },
            {
              "level": 2,
              "anchor": "SIM_event_cancel_time",
              "text": "SIM_event_cancel_time()"
            },
            {
              "level": 2,
              "anchor": "SIM_event_find_next_cycle",
              "text": "SIM_event_find_next_cycle()"
            },
            {
              "level": 2,
              "anchor": "SIM_event_post_time",
              "text": "SIM_event_post_time()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_event",
              "text": "SIM_register_event()"
            },
            {
              "level": 2,
              "anchor": "SIM_run_unrestricted",
              "text": "SIM_run_unrestricted()"
            },
            {
              "level": 2,
              "anchor": "SIM_step_count",
              "text": "SIM_step_count()"
            },
            {
              "level": 2,
              "anchor": "SIM_time",
              "text": "SIM_time()"
            },
            {
              "level": 1,
              "anchor": "Version-and-Copyrights",
              "text": "Version and Copyrights"
            },
            {
              "level": 2,
              "anchor": "SIM_register_copyright",
              "text": "SIM_register_copyright()"
            },
            {
              "level": 2,
              "anchor": "SIM_version",
              "text": "SIM_version()"
            },
            {
              "level": 1,
              "anchor": "frags_t",
              "text": "3.3.1 frags_t"
            },
            {
              "level": 2,
              "anchor": "Function-List",
              "text": "Function List"
            },
            {
              "level": 3,
              "anchor": "frags_add",
              "text": "frags_add()"
            },
            {
              "level": 3,
              "anchor": "frags_add_from_frags",
              "text": "frags_add_from_frags()"
            },
            {
              "level": 3,
              "anchor": "frags_extract",
              "text": "frags_extract()"
            },
            {
              "level": 3,
              "anchor": "frags_extract_8",
              "text": "frags_extract_8()"
            },
            {
              "level": 3,
              "anchor": "frags_extract_alloc",
              "text": "frags_extract_alloc()"
            },
            {
              "level": 3,
              "anchor": "frags_extract_slice",
              "text": "frags_extract_slice()"
            },
            {
              "level": 3,
              "anchor": "frags_extract_slice_alloc",
              "text": "frags_extract_slice_alloc()"
            },
            {
              "level": 3,
              "anchor": "frags_init",
              "text": "frags_init()"
            },
            {
              "level": 3,
              "anchor": "frags_init_add",
              "text": "frags_init_add()"
            },
            {
              "level": 3,
              "anchor": "frags_init_add_from_frags",
              "text": "frags_init_add_from_frags()"
            },
            {
              "level": 3,
              "anchor": "frags_it",
              "text": "frags_it()"
            },
            {
              "level": 3,
              "anchor": "frags_it_data",
              "text": "frags_it_data()"
            },
            {
              "level": 3,
              "anchor": "frags_it_end",
              "text": "frags_it_end()"
            },
            {
              "level": 3,
              "anchor": "frags_it_len",
              "text": "frags_it_len()"
            },
            {
              "level": 3,
              "anchor": "frags_it_next",
              "text": "frags_it_next()"
            },
            {
              "level": 3,
              "anchor": "frags_len",
              "text": "frags_len()"
            },
            {
              "level": 3,
              "anchor": "frags_prefix",
              "text": "frags_prefix()"
            },
            {
              "level": 3,
              "anchor": "frags_suffix",
              "text": "frags_suffix()"
            },
            {
              "level": 1,
              "anchor": "Dynamic-Memory-Management",
              "text": "3.3.2 Dynamic Memory Management"
            },
            {
              "level": 2,
              "anchor": "Macro-List",
              "text": "Macro List"
            },
            {
              "level": 3,
              "anchor": "MM_FREE",
              "text": "MM_FREE()"
            },
            {
              "level": 3,
              "anchor": "MM_MALLOC",
              "text": "MM_MALLOC()"
            },
            {
              "level": 3,
              "anchor": "MM_REALLOC",
              "text": "MM_REALLOC()"
            },
            {
              "level": 3,
              "anchor": "MM_STRDUP",
              "text": "MM_STRDUP()"
            }
          ],
          "children": []
        },
        {
          "file": "obsolete-device-api-types-and-functions.html",
          "name": "3.4 Obsolete Device API Types and Functions",
          "headings": [
            {
              "level": 1,
              "anchor": "Obsolete-Device-API-Types",
              "text": "3.4.1 Obsolete Device API Types"
            },
            {
              "level": 2,
              "anchor": "dbuffer_t",
              "text": "dbuffer_t"
            },
            {
              "level": 2,
              "anchor": "init_prefs_t",
              "text": "init_prefs_t"
            },
            {
              "level": 2,
              "anchor": "log_type_t",
              "text": "log_type_t"
            },
            {
              "level": 1,
              "anchor": "Obsolete-Device-API-Functions",
              "text": "3.4.2 Obsolete Device API Functions"
            },
            {
              "level": 2,
              "anchor": "dbuffer_append",
              "text": "dbuffer_append()"
            },
            {
              "level": 2,
              "anchor": "dbuffer_append_external_data",
              "text": "dbuffer_append_external_data()"
            },
            {
              "level": 2,
              "anchor": "dbuffer_append_value",
              "text": "dbuffer_append_value()"
            },
            {
              "level": 2,
              "anchor": "dbuffer_clone",
              "text": "dbuffer_clone()"
            },
            {
              "level": 2,
              "anchor": "dbuffer_copy_append",
              "text": "dbuffer_copy_append()"
            },
            {
              "level": 2,
              "anchor": "dbuffer_free",
              "text": "dbuffer_free()"
            },
            {
              "level": 2,
              "anchor": "dbuffer_len",
              "text": "dbuffer_len()"
            },
            {
              "level": 2,
              "anchor": "dbuffer_read",
              "text": "dbuffer_read()"
            },
            {
              "level": 2,
              "anchor": "dbuffer_remove",
              "text": "dbuffer_remove()"
            },
            {
              "level": 2,
              "anchor": "dbuffer_replace",
              "text": "dbuffer_replace()"
            },
            {
              "level": 2,
              "anchor": "dbuffer_split",
              "text": "dbuffer_split()"
            },
            {
              "level": 2,
              "anchor": "dbuffer_update",
              "text": "dbuffer_update()"
            },
            {
              "level": 2,
              "anchor": "new_dbuffer",
              "text": "new_dbuffer()"
            }
          ],
          "children": []
        }
      ]
    },
    {
      "file": "model-to-model-interfaces.html",
      "name": "4 Model-to-Model Interfaces",
      "headings": [],
      "children": [
        {
          "file": "__rm_interface_a20.html",
          "name": "a20",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_apic_bus.html",
          "name": "apic_bus",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_apic_cpu.html",
          "name": "apic_cpu",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_arinc429_bus.html",
          "name": "arinc429_bus",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_arinc429_receiver.html",
          "name": "arinc429_receiver",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_arm.html",
          "name": "arm",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_arm_avic.html",
          "name": "arm_avic",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_arm_coprocessor.html",
          "name": "arm_coprocessor",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_arm_cpu_group_event.html",
          "name": "arm_cpu_group_event",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_arm_cpu_group_exclusive.html",
          "name": "arm_cpu_group_exclusive",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_arm_cpu_group_tlb.html",
          "name": "arm_cpu_group_tlb",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_arm_external_debug.html",
          "name": "arm_external_debug",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_arm_gic.html",
          "name": "arm_gic",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_arm_gic_cpu_state.html",
          "name": "arm_gic_cpu_state",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_arm_trustzone.html",
          "name": "arm_trustzone",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_bridge.html",
          "name": "bridge",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_can_device.html",
          "name": "can_device",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_can_link.html",
          "name": "can_link",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_coreint.html",
          "name": "coreint",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_datagram_link.html",
          "name": "datagram_link",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ethernet_cable.html",
          "name": "ethernet_cable",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ethernet_common.html",
          "name": "ethernet_common",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ethernet_probe.html",
          "name": "ethernet_probe",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ethernet_snoop.html",
          "name": "ethernet_snoop",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ethernet_vlan_snoop.html",
          "name": "ethernet_vlan_snoop",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_extended_serial.html",
          "name": "extended_serial",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_firewire_bus.html",
          "name": "firewire_bus",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_firewire_device.html",
          "name": "firewire_device",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_fmn_station_control.html",
          "name": "fmn_station_control",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_fmn_station_control_v2.html",
          "name": "fmn_station_control_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_frequency.html",
          "name": "frequency",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_frequency_listener.html",
          "name": "frequency_listener",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_generic_message_device.html",
          "name": "generic_message_device",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_generic_message_link.html",
          "name": "generic_message_link",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_hpi.html",
          "name": "hpi",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_i2c_bridge.html",
          "name": "i2c_bridge",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_i2c_bus.html",
          "name": "i2c_bus",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_i2c_device.html",
          "name": "i2c_device",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_i2c_link.html",
          "name": "i2c_link",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_i2c_master.html",
          "name": "i2c_master",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_i2c_master_v2.html",
          "name": "i2c_master_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_i2c_slave.html",
          "name": "i2c_slave",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_i2c_slave_v2.html",
          "name": "i2c_slave_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_i3c_daa_snoop.html",
          "name": "i3c_daa_snoop",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_i3c_master.html",
          "name": "i3c_master",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_i3c_slave.html",
          "name": "i3c_slave",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_i8051_interrupt.html",
          "name": "i8051_interrupt",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_i8051_timer.html",
          "name": "i8051_timer",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ieee_802_15_4_control.html",
          "name": "ieee_802_15_4_control",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ieee_802_15_4_link.html",
          "name": "ieee_802_15_4_link",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ieee_802_15_4_probe.html",
          "name": "ieee_802_15_4_probe",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ieee_802_15_4_receiver.html",
          "name": "ieee_802_15_4_receiver",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ieee_802_3_mac.html",
          "name": "ieee_802_3_mac",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ieee_802_3_mac_v3.html",
          "name": "ieee_802_3_mac_v3",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ieee_802_3_phy.html",
          "name": "ieee_802_3_phy",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ieee_802_3_phy_v2.html",
          "name": "ieee_802_3_phy_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ieee_802_3_phy_v3.html",
          "name": "ieee_802_3_phy_v3",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_interrupt_ack.html",
          "name": "interrupt_ack",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_interrupt_cpu.html",
          "name": "interrupt_cpu",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_io_memory.html",
          "name": "io_memory",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_map_demap.html",
          "name": "map_demap",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_mdio45_bus.html",
          "name": "mdio45_bus",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_mdio45_phy.html",
          "name": "mdio45_phy",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_memory_space.html",
          "name": "memory_space",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_microwire.html",
          "name": "microwire",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_mii.html",
          "name": "mii",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_mii_management.html",
          "name": "mii_management",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_mips.html",
          "name": "mips",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_mips_cache_instruction.html",
          "name": "mips_cache_instruction",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_mips_coprocessor.html",
          "name": "mips_coprocessor",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_mips_eic.html",
          "name": "mips_eic",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_mips_exception_query.html",
          "name": "mips_exception_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_mips_ite.html",
          "name": "mips_ite",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ms1553_link.html",
          "name": "ms1553_link",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ms1553_snoop.html",
          "name": "ms1553_snoop",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ms1553_terminal.html",
          "name": "ms1553_terminal",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_multi_level_signal.html",
          "name": "multi_level_signal",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_nand_flash.html",
          "name": "nand_flash",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_nios.html",
          "name": "nios",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_nios_cache.html",
          "name": "nios_cache",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_nios_custom.html",
          "name": "nios_custom",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_nios_eic.html",
          "name": "nios_eic",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pci_bridge.html",
          "name": "pci_bridge",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pci_bus.html",
          "name": "pci_bus",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pci_device.html",
          "name": "pci_device",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pci_downstream.html",
          "name": "pci_downstream",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pci_express.html",
          "name": "pci_express",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pci_express_hotplug.html",
          "name": "pci_express_hotplug",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pci_interrupt.html",
          "name": "pci_interrupt",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pci_multi_function_device.html",
          "name": "pci_multi_function_device",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pci_upstream.html",
          "name": "pci_upstream",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pci_upstream_operation.html",
          "name": "pci_upstream_operation",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pcie_device.html",
          "name": "pcie_device",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pcie_map.html",
          "name": "pcie_map",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pcie_port_control.html",
          "name": "pcie_port_control",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pmr.html",
          "name": "pmr",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_port_space.html",
          "name": "port_space",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ppc.html",
          "name": "ppc",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pulse.html",
          "name": "pulse",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ram.html",
          "name": "ram",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_rapidio_v3.html",
          "name": "rapidio_v3",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_rapidio_v4.html",
          "name": "rapidio_v4",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_rapidio_v5.html",
          "name": "rapidio_v5",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_riscv_coprocessor.html",
          "name": "riscv_coprocessor",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_rs232_console.html",
          "name": "rs232_console",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_rs232_device.html",
          "name": "rs232_device",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_sata.html",
          "name": "sata",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_scale_factor_listener.html",
          "name": "scale_factor_listener",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_serial_device.html",
          "name": "serial_device",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_serial_peripheral_interface_master.html",
          "name": "serial_peripheral_interface_master",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_serial_peripheral_interface_slave.html",
          "name": "serial_peripheral_interface_slave",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_signal.html",
          "name": "signal",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_simple_dispatcher.html",
          "name": "simple_dispatcher",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_simple_interrupt.html",
          "name": "simple_interrupt",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_smm_instrumentation_subscribe.html",
          "name": "smm_instrumentation_subscribe",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_sparc_v8.html",
          "name": "sparc_v8",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_sparc_v8_ecc_fault_injection.html",
          "name": "sparc_v8_ecc_fault_injection",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_spr.html",
          "name": "spr",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_telemetry.html",
          "name": "telemetry",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_transaction_translator.html",
          "name": "transaction_translator",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_translate.html",
          "name": "translate",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_translation_flush.html",
          "name": "translation_flush",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_translator.html",
          "name": "translator",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_usb.html",
          "name": "usb",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_usb_device.html",
          "name": "usb_device",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_vectored_interrupt.html",
          "name": "vectored_interrupt",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_vectored_interrupt_source.html",
          "name": "vectored_interrupt_source",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_virtiofs_fuse.html",
          "name": "virtiofs_fuse",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_vmp.html",
          "name": "vmp",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_vmx_instrumentation_subscribe.html",
          "name": "vmx_instrumentation_subscribe",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86.html",
          "name": "x86",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_access_type.html",
          "name": "x86_access_type",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_address_query.html",
          "name": "x86_address_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_cache_flush.html",
          "name": "x86_cache_flush",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_cpuid.html",
          "name": "x86_cpuid",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_cpuid_query.html",
          "name": "x86_cpuid_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_cstate.html",
          "name": "x86_cstate",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_cstate_notification.html",
          "name": "x86_cstate_notification",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_ept.html",
          "name": "x86_ept",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_exception.html",
          "name": "x86_exception",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_exception_query.html",
          "name": "x86_exception_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_instruction_query.html",
          "name": "x86_instruction_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_instrumentation_subscribe.html",
          "name": "x86_instrumentation_subscribe",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_instrumentation_subscribe_v2.html",
          "name": "x86_instrumentation_subscribe_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_memory_access.html",
          "name": "x86_memory_access",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_memory_operation.html",
          "name": "x86_memory_operation",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_memory_query.html",
          "name": "x86_memory_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_msr.html",
          "name": "x86_msr",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_pkg_cstate.html",
          "name": "x86_pkg_cstate",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_reg_access.html",
          "name": "x86_reg_access",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_smm.html",
          "name": "x86_smm",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_smm_state.html",
          "name": "x86_smm_state",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_tlb.html",
          "name": "x86_tlb",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_tlb_v2.html",
          "name": "x86_tlb_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_tlb_v3.html",
          "name": "x86_tlb_v3",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_vmp_control.html",
          "name": "x86_vmp_control",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_xed_access.html",
          "name": "xed_access",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_xtensa_export_state.html",
          "name": "xtensa_export_state",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_xtensa_import_wire.html",
          "name": "xtensa_import_wire",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_xtensa_input_queue.html",
          "name": "xtensa_input_queue",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_xtensa_lookup.html",
          "name": "xtensa_lookup",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_xtensa_output_queue.html",
          "name": "xtensa_output_queue",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_xtensa_tie_export_state.html",
          "name": "xtensa_tie_export_state",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_xtensa_tie_import_wire.html",
          "name": "xtensa_tie_import_wire",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_xtensa_tie_input_queue.html",
          "name": "xtensa_tie_input_queue",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_xtensa_tie_lookup.html",
          "name": "xtensa_tie_lookup",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_xtensa_tie_output_queue.html",
          "name": "xtensa_tie_output_queue",
          "headings": [],
          "children": []
        }
      ]
    },
    {
      "file": "model-to-simulator-interfaces.html",
      "name": "5 Model-to-Simulator Interfaces",
      "headings": [],
      "children": [
        {
          "file": "__rm_interface_abs_pointer.html",
          "name": "abs_pointer",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_abs_pointer_activate.html",
          "name": "abs_pointer_activate",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_apic_bus_v2.html",
          "name": "apic_bus_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_bank_after_read.html",
          "name": "bank_after_read",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_bank_after_write.html",
          "name": "bank_after_write",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_bank_before_read.html",
          "name": "bank_before_read",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_bank_before_write.html",
          "name": "bank_before_write",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_bank_instrumentation_subscribe.html",
          "name": "bank_instrumentation_subscribe",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_branch_recorder_handler.html",
          "name": "branch_recorder_handler",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_breakpoint.html",
          "name": "breakpoint",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_breakpoint_change.html",
          "name": "breakpoint_change",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_breakpoint_query.html",
          "name": "breakpoint_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_breakpoint_query_v2.html",
          "name": "breakpoint_query_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_breakpoint_trigger.html",
          "name": "breakpoint_trigger",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_callback_info.html",
          "name": "callback_info",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_cell_inspection.html",
          "name": "cell_inspection",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_co_execute.html",
          "name": "co_execute",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_component.html",
          "name": "component",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_component_connector.html",
          "name": "component_connector",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_concurrency_group.html",
          "name": "concurrency_group",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_concurrency_mode.html",
          "name": "concurrency_mode",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_connector.html",
          "name": "connector",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_cpu_cached_instruction.html",
          "name": "cpu_cached_instruction",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_cpu_cached_instruction_once.html",
          "name": "cpu_cached_instruction_once",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_cpu_cached_stream.html",
          "name": "cpu_cached_stream",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_cpu_exception_query.html",
          "name": "cpu_exception_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_cpu_instruction_decoder.html",
          "name": "cpu_instruction_decoder",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_cpu_instruction_query.html",
          "name": "cpu_instruction_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_cpu_instrumentation_subscribe.html",
          "name": "cpu_instrumentation_subscribe",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_cpu_memory_query.html",
          "name": "cpu_memory_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_cycle.html",
          "name": "cycle",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_cycle_control.html",
          "name": "cycle_control",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_cycle_event.html",
          "name": "cycle_event",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_cycle_event_instrumentation.html",
          "name": "cycle_event_instrumentation",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_decoder.html",
          "name": "decoder",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_describe_registers.html",
          "name": "describe_registers",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_device_identification.html",
          "name": "device_identification",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_direct_memory.html",
          "name": "direct_memory",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_direct_memory_flush.html",
          "name": "direct_memory_flush",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_direct_memory_lookup.html",
          "name": "direct_memory_lookup",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_direct_memory_lookup_v2.html",
          "name": "direct_memory_lookup_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_direct_memory_tags.html",
          "name": "direct_memory_tags",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_direct_memory_update.html",
          "name": "direct_memory_update",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_disk_component.html",
          "name": "disk_component",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_event_delta.html",
          "name": "event_delta",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_event_handler.html",
          "name": "event_handler",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_event_provider.html",
          "name": "event_provider",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_exception.html",
          "name": "exception",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_exec_trace.html",
          "name": "exec_trace",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_execute.html",
          "name": "execute",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_execute_control.html",
          "name": "execute_control",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_freerun.html",
          "name": "freerun",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_gfx_con.html",
          "name": "gfx_con",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_hap_listen.html",
          "name": "hap_listen",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_hypersim_pattern.html",
          "name": "hypersim_pattern",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_hypersim_pattern_matcher.html",
          "name": "hypersim_pattern_matcher",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_image.html",
          "name": "image",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_image_snoop.html",
          "name": "image_snoop",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_instruction_fetch.html",
          "name": "instruction_fetch",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_instrumentation_order.html",
          "name": "instrumentation_order",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_int_register.html",
          "name": "int_register",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_keyboard.html",
          "name": "keyboard",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_keyboard_console.html",
          "name": "keyboard_console",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_linear_image.html",
          "name": "linear_image",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_magic_pipe_reader.html",
          "name": "magic_pipe_reader",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_magic_pipe_setup.html",
          "name": "magic_pipe_setup",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_magic_pipe_writer.html",
          "name": "magic_pipe_writer",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_memory_profiler.html",
          "name": "memory_profiler",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_mmc.html",
          "name": "mmc",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_mouse.html",
          "name": "mouse",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_opcode_info.html",
          "name": "opcode_info",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pool_protect.html",
          "name": "pool_protect",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_pre_decoder.html",
          "name": "pre_decoder",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_processor_cli.html",
          "name": "processor_cli",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_processor_endian.html",
          "name": "processor_endian",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_processor_gui.html",
          "name": "processor_gui",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_processor_info.html",
          "name": "processor_info",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_processor_info_v2.html",
          "name": "processor_info_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_ram_access_subscribe.html",
          "name": "ram_access_subscribe",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_simple_timing_v2.html",
          "name": "simple_timing_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_simulator_cache.html",
          "name": "simulator_cache",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_snoop_memory.html",
          "name": "snoop_memory",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_stall.html",
          "name": "stall",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_step.html",
          "name": "step",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_step_cycle_ratio.html",
          "name": "step_cycle_ratio",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_step_event_instrumentation.html",
          "name": "step_event_instrumentation",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_step_info.html",
          "name": "step_info",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_synchronous_mode.html",
          "name": "synchronous_mode",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_temporal_state.html",
          "name": "temporal_state",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_timing_model.html",
          "name": "timing_model",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_transaction.html",
          "name": "transaction",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_tsc_update.html",
          "name": "tsc_update",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_uint64_state.html",
          "name": "uint64_state",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_vga_text_info.html",
          "name": "vga_text_info",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_vga_text_update.html",
          "name": "vga_text_update",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_vga_update.html",
          "name": "vga_update",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_virtual_data_breakpoint.html",
          "name": "virtual_data_breakpoint",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_virtual_instruction_breakpoint.html",
          "name": "virtual_instruction_breakpoint",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_monitor.html",
          "name": "x86_monitor",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_monitor_notification.html",
          "name": "x86_monitor_notification",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_smm_notification.html",
          "name": "x86_smm_notification",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_unplug.html",
          "name": "x86_unplug",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_x86_unplug_v2.html",
          "name": "x86_unplug_v2",
          "headings": [],
          "children": []
        }
      ]
    },
    {
      "file": "simulator-api.html",
      "name": "6 Simulator API",
      "headings": [],
      "children": [
        {
          "file": "simulator-api-data-types.html",
          "name": "6.1 Simulator API Data Types",
          "headings": [
            {
              "level": 1,
              "anchor": "Generic-Data-Types",
              "text": "6.1.1 Generic Data Types"
            },
            {
              "level": 2,
              "anchor": "addr_prof_iter_t",
              "text": "addr_prof_iter_t"
            },
            {
              "level": 2,
              "anchor": "hap_flags_t",
              "text": "hap_flags_t"
            }
          ],
          "children": []
        },
        {
          "file": "simulator-api-functions.html",
          "name": "6.2 Simulator API Functions",
          "headings": [
            {
              "level": 1,
              "anchor": "Breakpoints",
              "text": "Breakpoints"
            },
            {
              "level": 2,
              "anchor": "SIM_break_cycle",
              "text": "SIM_break_cycle()"
            },
            {
              "level": 2,
              "anchor": "SIM_break_step",
              "text": "SIM_break_step()"
            },
            {
              "level": 2,
              "anchor": "SIM_breakpoint",
              "text": "SIM_breakpoint()"
            },
            {
              "level": 2,
              "anchor": "SIM_breakpoint_remove",
              "text": "SIM_breakpoint_remove()"
            },
            {
              "level": 2,
              "anchor": "SIM_delete_breakpoint",
              "text": "SIM_delete_breakpoint()"
            },
            {
              "level": 2,
              "anchor": "SIM_disable_breakpoint",
              "text": "SIM_disable_breakpoint()"
            },
            {
              "level": 1,
              "anchor": "Configuration",
              "text": "Configuration"
            },
            {
              "level": 2,
              "anchor": "SIM_add_configuration",
              "text": "SIM_add_configuration()"
            },
            {
              "level": 2,
              "anchor": "SIM_class_has_attribute",
              "text": "SIM_class_has_attribute()"
            },
            {
              "level": 2,
              "anchor": "SIM_create_object",
              "text": "SIM_create_object()"
            },
            {
              "level": 2,
              "anchor": "SIM_current_checkpoint_dir",
              "text": "SIM_current_checkpoint_dir()"
            },
            {
              "level": 2,
              "anchor": "SIM_delete_objects",
              "text": "SIM_delete_objects()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_all_classes",
              "text": "SIM_get_all_classes()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_all_objects",
              "text": "SIM_get_all_objects()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_attribute",
              "text": "SIM_get_attribute()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_attribute_attributes",
              "text": "SIM_get_attribute_attributes()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_class_attribute",
              "text": "SIM_get_class_attribute()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_object",
              "text": "SIM_get_object()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_python_interface_type",
              "text": "SIM_get_python_interface_type()"
            },
            {
              "level": 2,
              "anchor": "SIM_object_class",
              "text": "SIM_object_class()"
            },
            {
              "level": 2,
              "anchor": "SIM_object_descendant",
              "text": "SIM_object_descendant()"
            },
            {
              "level": 2,
              "anchor": "SIM_object_is_processor",
              "text": "SIM_object_is_processor()"
            },
            {
              "level": 2,
              "anchor": "SIM_object_iterator",
              "text": "SIM_object_iterator()"
            },
            {
              "level": 2,
              "anchor": "SIM_object_iterator_next",
              "text": "SIM_object_iterator_next()"
            },
            {
              "level": 2,
              "anchor": "SIM_object_parent",
              "text": "SIM_object_parent()"
            },
            {
              "level": 2,
              "anchor": "SIM_port_object_parent",
              "text": "SIM_port_object_parent()"
            },
            {
              "level": 2,
              "anchor": "SIM_read_configuration",
              "text": "SIM_read_configuration()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_context_handler",
              "text": "SIM_register_context_handler()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_attribute",
              "text": "SIM_set_attribute()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_class_attribute",
              "text": "SIM_set_class_attribute()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_configuration",
              "text": "SIM_set_configuration()"
            },
            {
              "level": 2,
              "anchor": "SIM_shallow_object_iterator",
              "text": "SIM_shallow_object_iterator()"
            },
            {
              "level": 2,
              "anchor": "SIM_write_configuration_to_file",
              "text": "SIM_write_configuration_to_file()"
            },
            {
              "level": 1,
              "anchor": "Embedding-Simics",
              "text": "Embedding Simics"
            },
            {
              "level": 2,
              "anchor": "SIM_get_init_arg_string",
              "text": "SIM_get_init_arg_string()"
            },
            {
              "level": 2,
              "anchor": "SIM_init_command_line",
              "text": "SIM_init_command_line()"
            },
            {
              "level": 2,
              "anchor": "SIM_init_environment",
              "text": "SIM_init_environment()"
            },
            {
              "level": 2,
              "anchor": "SIM_init_simulator2",
              "text": "SIM_init_simulator2()"
            },
            {
              "level": 2,
              "anchor": "SIM_main_loop",
              "text": "SIM_main_loop()"
            },
            {
              "level": 2,
              "anchor": "SIM_process_work",
              "text": "SIM_process_work()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_frontend_context",
              "text": "SIM_set_frontend_context()"
            },
            {
              "level": 1,
              "anchor": "Haps",
              "text": "Haps"
            },
            {
              "level": 2,
              "anchor": "SIM_get_all_hap_types",
              "text": "SIM_get_all_hap_types()"
            },
            {
              "level": 2,
              "anchor": "SIM_hap_add_callback",
              "text": "SIM_hap_add_callback()"
            },
            {
              "level": 2,
              "anchor": "SIM_hap_delete_callback",
              "text": "SIM_hap_delete_callback()"
            },
            {
              "level": 1,
              "anchor": "Logging",
              "text": "Logging"
            },
            {
              "level": 2,
              "anchor": "SIM_get_quiet",
              "text": "SIM_get_quiet()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_verbose",
              "text": "SIM_get_verbose()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_quiet",
              "text": "SIM_set_quiet()"
            },
            {
              "level": 2,
              "anchor": "SIM_set_verbose",
              "text": "SIM_set_verbose()"
            },
            {
              "level": 1,
              "anchor": "Memory",
              "text": "Memory"
            },
            {
              "level": 2,
              "anchor": "SIM_load_binary",
              "text": "SIM_load_binary()"
            },
            {
              "level": 2,
              "anchor": "SIM_load_file",
              "text": "SIM_load_file()"
            },
            {
              "level": 2,
              "anchor": "SIM_read_byte",
              "text": "SIM_read_byte()"
            },
            {
              "level": 2,
              "anchor": "SIM_read_phys_memory",
              "text": "SIM_read_phys_memory()"
            },
            {
              "level": 2,
              "anchor": "SIM_read_phys_memory_tags",
              "text": "SIM_read_phys_memory_tags()"
            },
            {
              "level": 2,
              "anchor": "SIM_write_phys_memory",
              "text": "SIM_write_phys_memory()"
            },
            {
              "level": 1,
              "anchor": "Modules",
              "text": "Modules"
            },
            {
              "level": 2,
              "anchor": "SIM_add_module_dir",
              "text": "SIM_add_module_dir()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_all_failed_modules",
              "text": "SIM_get_all_failed_modules()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_all_modules",
              "text": "SIM_get_all_modules()"
            },
            {
              "level": 2,
              "anchor": "SIM_load_module",
              "text": "SIM_load_module()"
            },
            {
              "level": 2,
              "anchor": "SIM_module_list_refresh",
              "text": "SIM_module_list_refresh()"
            },
            {
              "level": 1,
              "anchor": "Object-Locks",
              "text": "Object Locks"
            },
            {
              "level": 2,
              "anchor": "SIM_ASSERT_CELL_CONTEXT",
              "text": "SIM_ASSERT_CELL_CONTEXT()"
            },
            {
              "level": 2,
              "anchor": "SIM_ASSERT_OBJECT_LOCK",
              "text": "SIM_ASSERT_OBJECT_LOCK()"
            },
            {
              "level": 2,
              "anchor": "SIM_acquire_cell",
              "text": "SIM_acquire_cell()"
            },
            {
              "level": 2,
              "anchor": "SIM_acquire_object",
              "text": "SIM_acquire_object()"
            },
            {
              "level": 2,
              "anchor": "SIM_acquire_object_for_execution",
              "text": "SIM_acquire_object_for_execution()"
            },
            {
              "level": 2,
              "anchor": "SIM_acquire_target",
              "text": "SIM_acquire_target()"
            },
            {
              "level": 2,
              "anchor": "SIM_drop_thread_domains",
              "text": "SIM_drop_thread_domains()"
            },
            {
              "level": 2,
              "anchor": "SIM_yield_thread_domains",
              "text": "SIM_yield_thread_domains()"
            },
            {
              "level": 1,
              "anchor": "Output",
              "text": "Output"
            },
            {
              "level": 2,
              "anchor": "SIM_add_output_handler",
              "text": "SIM_add_output_handler()"
            },
            {
              "level": 2,
              "anchor": "SIM_write",
              "text": "SIM_write()"
            },
            {
              "level": 1,
              "anchor": "Path",
              "text": "Path"
            },
            {
              "level": 2,
              "anchor": "SIM_add_directory",
              "text": "SIM_add_directory()"
            },
            {
              "level": 2,
              "anchor": "SIM_clear_directories",
              "text": "SIM_clear_directories()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_directories",
              "text": "SIM_get_directories()"
            },
            {
              "level": 2,
              "anchor": "SIM_lookup_file",
              "text": "SIM_lookup_file()"
            },
            {
              "level": 2,
              "anchor": "SIM_native_path",
              "text": "SIM_native_path()"
            },
            {
              "level": 1,
              "anchor": "Processor",
              "text": "Processor"
            },
            {
              "level": 2,
              "anchor": "SIM_clear_augmentation_bit",
              "text": "SIM_clear_augmentation_bit()"
            },
            {
              "level": 2,
              "anchor": "SIM_disassemble_address",
              "text": "SIM_disassemble_address()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_all_processors",
              "text": "SIM_get_all_processors()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_processor",
              "text": "SIM_get_processor()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_processor_number",
              "text": "SIM_get_processor_number()"
            },
            {
              "level": 2,
              "anchor": "SIM_number_processors",
              "text": "SIM_number_processors()"
            },
            {
              "level": 2,
              "anchor": "SIM_processor_privilege_level",
              "text": "SIM_processor_privilege_level()"
            },
            {
              "level": 2,
              "anchor": "SIM_reset_processor",
              "text": "SIM_reset_processor()"
            },
            {
              "level": 1,
              "anchor": "Profiling",
              "text": "Profiling"
            },
            {
              "level": 2,
              "anchor": "SIM_iter_next",
              "text": "SIM_iter_next()"
            },
            {
              "level": 1,
              "anchor": "Simulation-Control",
              "text": "Simulation Control"
            },
            {
              "level": 2,
              "anchor": "SIM_break_message",
              "text": "SIM_break_message()"
            },
            {
              "level": 2,
              "anchor": "SIM_break_simulation",
              "text": "SIM_break_simulation()"
            },
            {
              "level": 2,
              "anchor": "SIM_continue",
              "text": "SIM_continue()"
            },
            {
              "level": 2,
              "anchor": "SIM_current_clock",
              "text": "SIM_current_clock()"
            },
            {
              "level": 2,
              "anchor": "SIM_simics_is_running",
              "text": "SIM_simics_is_running()"
            },
            {
              "level": 1,
              "anchor": "Simulation-Independent-Services",
              "text": "Simulation Independent Services"
            },
            {
              "level": 2,
              "anchor": "SIM_cancel_realtime_event",
              "text": "SIM_cancel_realtime_event()"
            },
            {
              "level": 2,
              "anchor": "SIM_notify_on_socket",
              "text": "SIM_notify_on_socket()"
            },
            {
              "level": 2,
              "anchor": "SIM_realtime_event",
              "text": "SIM_realtime_event()"
            },
            {
              "level": 2,
              "anchor": "SIM_register_work",
              "text": "SIM_register_work()"
            },
            {
              "level": 2,
              "anchor": "SIM_run_async_work",
              "text": "SIM_run_async_work()"
            },
            {
              "level": 2,
              "anchor": "SIM_run_in_thread",
              "text": "SIM_run_in_thread()"
            },
            {
              "level": 2,
              "anchor": "SIM_thread_safe_callback",
              "text": "SIM_thread_safe_callback()"
            },
            {
              "level": 1,
              "anchor": "Simulator-Translation-Caches",
              "text": "Simulator Translation Caches"
            },
            {
              "level": 2,
              "anchor": "SIM_STC_flush_cache",
              "text": "SIM_STC_flush_cache()"
            },
            {
              "level": 2,
              "anchor": "SIM_flush_all_caches",
              "text": "SIM_flush_all_caches()"
            },
            {
              "level": 2,
              "anchor": "SIM_flush_cell_caches",
              "text": "SIM_flush_cell_caches()"
            },
            {
              "level": 1,
              "anchor": "Stalling",
              "text": "Stalling"
            },
            {
              "level": 2,
              "anchor": "SIM_stall_count",
              "text": "SIM_stall_count()"
            },
            {
              "level": 2,
              "anchor": "SIM_stall_cycle",
              "text": "SIM_stall_cycle()"
            },
            {
              "level": 2,
              "anchor": "SIM_stalled_until",
              "text": "SIM_stalled_until()"
            },
            {
              "level": 1,
              "anchor": "Time-and-Events",
              "text": "Time and Events"
            },
            {
              "level": 2,
              "anchor": "SIM_run_alone",
              "text": "SIM_run_alone()"
            },
            {
              "level": 1,
              "anchor": "User-Interface",
              "text": "User Interface"
            },
            {
              "level": 2,
              "anchor": "SIM_call_python_function",
              "text": "SIM_call_python_function()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_api_function",
              "text": "SIM_get_api_function()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_batch_mode",
              "text": "SIM_get_batch_mode()"
            },
            {
              "level": 2,
              "anchor": "SIM_get_debugger",
              "text": "SIM_get_debugger()"
            },
            {
              "level": 2,
              "anchor": "SIM_load_target",
              "text": "SIM_load_target()"
            },
            {
              "level": 2,
              "anchor": "SIM_quit",
              "text": "SIM_quit()"
            },
            {
              "level": 2,
              "anchor": "SIM_run_command",
              "text": "SIM_run_command()"
            },
            {
              "level": 2,
              "anchor": "SIM_run_command_file",
              "text": "SIM_run_command_file()"
            },
            {
              "level": 2,
              "anchor": "SIM_run_python",
              "text": "SIM_run_python()"
            },
            {
              "level": 2,
              "anchor": "SIM_shutdown",
              "text": "SIM_shutdown()"
            },
            {
              "level": 2,
              "anchor": "SIM_source_python",
              "text": "SIM_source_python()"
            }
          ],
          "children": []
        }
      ]
    },
    {
      "file": "simulator-to-simulator-interfaces.html",
      "name": "7 Simulator-to-Simulator Interfaces",
      "headings": [],
      "children": [
        {
          "file": "__rm_interface_address_profiler.html",
          "name": "address_profiler",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_branch_arc.html",
          "name": "branch_arc",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_break_strings_v2.html",
          "name": "break_strings_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_breakpoint_manager.html",
          "name": "breakpoint_manager",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_breakpoint_type.html",
          "name": "breakpoint_type",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_breakpoint_type_provider.html",
          "name": "breakpoint_type_provider",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_checkpoint.html",
          "name": "checkpoint",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_con_input.html",
          "name": "con_input",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_con_input_code.html",
          "name": "con_input_code",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_context_handler.html",
          "name": "context_handler",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_debug_notification.html",
          "name": "debug_notification",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_debug_query.html",
          "name": "debug_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_debug_setup.html",
          "name": "debug_setup",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_debug_step.html",
          "name": "debug_step",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_debug_symbol.html",
          "name": "debug_symbol",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_debug_symbol_file.html",
          "name": "debug_symbol_file",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_disassemble.html",
          "name": "disassemble",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_follower_agent.html",
          "name": "follower_agent",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_gfx_break.html",
          "name": "gfx_break",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_host_serial.html",
          "name": "host_serial",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_instrumentation_connection.html",
          "name": "instrumentation_connection",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_instrumentation_filter_master.html",
          "name": "instrumentation_filter_master",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_instrumentation_filter_slave.html",
          "name": "instrumentation_filter_slave",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_instrumentation_filter_status.html",
          "name": "instrumentation_filter_status",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_instrumentation_tool.html",
          "name": "instrumentation_tool",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_leader_message.html",
          "name": "leader_message",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_component.html",
          "name": "osa_component",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_control.html",
          "name": "osa_control",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_control_v2.html",
          "name": "osa_control_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_machine_notification.html",
          "name": "osa_machine_notification",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_machine_query.html",
          "name": "osa_machine_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_mapper_admin.html",
          "name": "osa_mapper_admin",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_mapper_control.html",
          "name": "osa_mapper_control",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_mapper_query.html",
          "name": "osa_mapper_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_micro_checkpoint.html",
          "name": "osa_micro_checkpoint",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_node_path.html",
          "name": "osa_node_path",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_node_tree_admin.html",
          "name": "osa_node_tree_admin",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_node_tree_notification.html",
          "name": "osa_node_tree_notification",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_node_tree_query.html",
          "name": "osa_node_tree_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_parameters.html",
          "name": "osa_parameters",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_tracker_component.html",
          "name": "osa_tracker_component",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_tracker_control.html",
          "name": "osa_tracker_control",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_tracker_state_admin.html",
          "name": "osa_tracker_state_admin",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_tracker_state_notification.html",
          "name": "osa_tracker_state_notification",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_osa_tracker_state_query.html",
          "name": "osa_tracker_state_query",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_preference.html",
          "name": "preference",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_probe.html",
          "name": "probe",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_probe_cache.html",
          "name": "probe_cache",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_probe_index.html",
          "name": "probe_index",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_probe_sampler_cache.html",
          "name": "probe_sampler_cache",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_probe_subscribe.html",
          "name": "probe_subscribe",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_recorder.html",
          "name": "recorder",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_recorder_v2.html",
          "name": "recorder_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_register_breakpoint.html",
          "name": "register_breakpoint",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_screenshot.html",
          "name": "screenshot",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_serial_console_frontend.html",
          "name": "serial_console_frontend",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_slave_agent.html",
          "name": "slave_agent",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_slaver_message.html",
          "name": "slaver_message",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_table.html",
          "name": "table",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_telnet_connection.html",
          "name": "telnet_connection",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_telnet_connection_v2.html",
          "name": "telnet_connection_v2",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_vnc_server.html",
          "name": "vnc_server",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_interface_vnc_server_v2.html",
          "name": "vnc_server_v2",
          "headings": [],
          "children": []
        }
      ]
    },
    {
      "file": "link-api.html",
      "name": "8 Link Library API",
      "headings": [],
      "children": [
        {
          "file": "link-library-api.html",
          "name": "Link Library API",
          "headings": [
            {
              "level": 1,
              "anchor": "SIMLINK_config_remove_value",
              "text": "SIMLINK_config_remove_value()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_config_update_value",
              "text": "SIMLINK_config_update_value()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_endpoint_clock",
              "text": "SIMLINK_endpoint_clock()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_endpoint_dev_name",
              "text": "SIMLINK_endpoint_dev_name()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_endpoint_device",
              "text": "SIMLINK_endpoint_device()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_endpoint_disconnect",
              "text": "SIMLINK_endpoint_disconnect()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_endpoint_finalize",
              "text": "SIMLINK_endpoint_finalize()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_endpoint_id",
              "text": "SIMLINK_endpoint_id()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_endpoint_init",
              "text": "SIMLINK_endpoint_init()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_endpoint_is_device",
              "text": "SIMLINK_endpoint_is_device()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_endpoint_link",
              "text": "SIMLINK_endpoint_link()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_endpoint_port",
              "text": "SIMLINK_endpoint_port()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_finalize",
              "text": "SIMLINK_finalize()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_find_endpoint_by_id",
              "text": "SIMLINK_find_endpoint_by_id()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_init",
              "text": "SIMLINK_init()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_init_library",
              "text": "SIMLINK_init_library()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_init_message",
              "text": "SIMLINK_init_message()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_pre_delete",
              "text": "SIMLINK_pre_delete()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_register_class",
              "text": "SIMLINK_register_class()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_register_endpoint_class",
              "text": "SIMLINK_register_endpoint_class()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_register_snoop_endpoint_class",
              "text": "SIMLINK_register_snoop_endpoint_class()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_send_message",
              "text": "SIMLINK_send_message()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_send_message_multi",
              "text": "SIMLINK_send_message_multi()"
            },
            {
              "level": 1,
              "anchor": "SIMLINK_snoop_endpoint_create",
              "text": "SIMLINK_snoop_endpoint_create()"
            },
            {
              "level": 1,
              "anchor": "link_message_t",
              "text": "link_message_t"
            },
            {
              "level": 1,
              "anchor": "link_type_t",
              "text": "link_type_t"
            }
          ],
          "children": []
        },
        {
          "file": "link-component-api.html",
          "name": "Link Component API",
          "headings": [
            {
              "level": 1,
              "anchor": "link_components.create_simple",
              "text": "link_components.create_simple()"
            },
            {
              "level": 1,
              "anchor": "link_components.link_component",
              "text": "link_components.link_component"
            },
            {
              "level": 1,
              "anchor": "link_components.link_component.add_link_connector",
              "text": "link_components.link_component.add_link_connector()"
            },
            {
              "level": 1,
              "anchor": "link_components.link_component.add_link_connector_template",
              "text": "link_components.link_component.add_link_connector_template()"
            },
            {
              "level": 1,
              "anchor": "link_components.link_component.add_objects",
              "text": "link_components.link_component.add_objects()"
            },
            {
              "level": 1,
              "anchor": "link_components.link_component.get_link_object_name",
              "text": "link_components.link_component.get_link_object_name()"
            },
            {
              "level": 1,
              "anchor": "link_components.link_component.register_connector_templates",
              "text": "link_components.link_component.register_connector_templates()"
            }
          ],
          "children": []
        }
      ]
    },
    {
      "file": "processor-api.html",
      "name": "9 Processor API",
      "headings": [],
      "children": [
        {
          "file": "interfaces.html",
          "name": "9.1 Interfaces",
          "headings": [
            {
              "level": 1,
              "anchor": "Processor-Info-Interface",
              "text": "Processor Info Interface"
            },
            {
              "level": 1,
              "anchor": "Processor-CLI-Interface",
              "text": "Processor CLI Interface"
            },
            {
              "level": 1,
              "anchor": "Processor-GUI-Interface",
              "text": "Processor GUI Interface"
            },
            {
              "level": 1,
              "anchor": "Step-Interface",
              "text": "Step Interface"
            },
            {
              "level": 1,
              "anchor": "Step-Cycle-Ratio-Interface",
              "text": "Step-Cycle-Ratio Interface"
            },
            {
              "level": 1,
              "anchor": "Stall-Interface",
              "text": "Stall Interface"
            },
            {
              "level": 1,
              "anchor": "Register-Interface",
              "text": "Register Interface"
            },
            {
              "level": 1,
              "anchor": "Decoder-Interface",
              "text": "Decoder Interface"
            },
            {
              "level": 1,
              "anchor": "Exception-Interface",
              "text": "Exception Interface"
            },
            {
              "level": 1,
              "anchor": "Context-Handler-Interface",
              "text": "Context Handler Interface"
            },
            {
              "level": 1,
              "anchor": "Exec-Trace-Interface",
              "text": "Exec Trace Interface"
            },
            {
              "level": 1,
              "anchor": "Opcode-Info-Interface",
              "text": "Opcode Info Interface"
            },
            {
              "level": 1,
              "anchor": "Virtual-Data-Breakpoint-Interface",
              "text": "Virtual Data Breakpoint Interface"
            },
            {
              "level": 1,
              "anchor": "Virtual-Instruction-Breakpoint-Interface",
              "text": "Virtual Instruction Breakpoint Interface"
            },
            {
              "level": 1,
              "anchor": "Describe-Registers-Interface",
              "text": "Describe Registers Interface"
            }
          ],
          "children": []
        },
        {
          "file": "simics-api-functions.html",
          "name": "9.2 Simics API Functions",
          "headings": [],
          "children": []
        }
      ]
    },
    {
      "file": "python-api.html",
      "name": "10 Python API",
      "headings": [],
      "children": [
        {
          "file": "simics-types-in-python.html",
          "name": "10.1 Simics Types in Python",
          "headings": [],
          "children": []
        },
        {
          "file": "command-line-interface.html",
          "name": "10.2 Command Line Interface",
          "headings": [
            {
              "level": 1,
              "anchor": "CLI-Arguments-Types",
              "text": "CLI Arguments Types"
            },
            {
              "level": 2,
              "anchor": "addr_t",
              "text": "addr_t"
            },
            {
              "level": 2,
              "anchor": "bool_ttrue_str-false_str",
              "text": "bool_t(true_str, false_str)"
            },
            {
              "level": 2,
              "anchor": "filename_tdirsFalse-existFalse-simpathFalse-checkpointFalse",
              "text": "filename_t(dirs=False, exist=False, simpath=False, checkpoint=False)"
            },
            {
              "level": 2,
              "anchor": "flag_t",
              "text": "flag_t"
            },
            {
              "level": 2,
              "anchor": "float_t",
              "text": "float_t"
            },
            {
              "level": 2,
              "anchor": "int16_t",
              "text": "int16_t"
            },
            {
              "level": 2,
              "anchor": "int32_t",
              "text": "int32_t"
            },
            {
              "level": 2,
              "anchor": "int64_t",
              "text": "int64_t"
            },
            {
              "level": 2,
              "anchor": "int8_t",
              "text": "int8_t"
            },
            {
              "level": 2,
              "anchor": "int_t",
              "text": "int_t"
            },
            {
              "level": 2,
              "anchor": "integer_t",
              "text": "integer_t"
            },
            {
              "level": 2,
              "anchor": "ip_port_t",
              "text": "ip_port_t"
            },
            {
              "level": 2,
              "anchor": "list_t",
              "text": "list_t"
            },
            {
              "level": 2,
              "anchor": "nil_t",
              "text": "nil_t"
            },
            {
              "level": 2,
              "anchor": "obj_tdesc-kind--None-want_port--False",
              "text": "obj_t(desc, kind = None, want_port = False)"
            },
            {
              "level": 2,
              "anchor": "poly_tdesc-type1-type2-...",
              "text": "poly_t(desc, type1, type2, ...)"
            },
            {
              "level": 2,
              "anchor": "range_tmin-max-desc-moduloFalse",
              "text": "range_t(min, max, desc, modulo=False)"
            },
            {
              "level": 2,
              "anchor": "sint16_t",
              "text": "sint16_t"
            },
            {
              "level": 2,
              "anchor": "sint32_t",
              "text": "sint32_t"
            },
            {
              "level": 2,
              "anchor": "sint64_t",
              "text": "sint64_t"
            },
            {
              "level": 2,
              "anchor": "sint8_t",
              "text": "sint8_t"
            },
            {
              "level": 2,
              "anchor": "str_t",
              "text": "str_t"
            },
            {
              "level": 2,
              "anchor": "string_set_tstrings",
              "text": "string_set_t(strings)"
            },
            {
              "level": 2,
              "anchor": "uint16_t",
              "text": "uint16_t"
            },
            {
              "level": 2,
              "anchor": "uint32_t",
              "text": "uint32_t"
            },
            {
              "level": 2,
              "anchor": "uint64_t",
              "text": "uint64_t"
            },
            {
              "level": 2,
              "anchor": "uint8_t",
              "text": "uint8_t"
            },
            {
              "level": 2,
              "anchor": "uint_t",
              "text": "uint_t"
            },
            {
              "level": 1,
              "anchor": "CLI-Classes-and-Functions",
              "text": "CLI Classes and Functions"
            },
            {
              "level": 2,
              "anchor": "cli.CliError",
              "text": "cli.CliError"
            },
            {
              "level": 2,
              "anchor": "cli.arg",
              "text": "cli.arg"
            },
            {
              "level": 2,
              "anchor": "cli.command_quiet_return",
              "text": "cli.command_quiet_return"
            },
            {
              "level": 2,
              "anchor": "cli.command_return",
              "text": "cli.command_return"
            },
            {
              "level": 2,
              "anchor": "cli.command_verbose_return",
              "text": "cli.command_verbose_return"
            },
            {
              "level": 2,
              "anchor": "cli.get_available_object_name",
              "text": "cli.get_available_object_name()"
            },
            {
              "level": 2,
              "anchor": "cli.get_component_object",
              "text": "cli.get_component_object()"
            },
            {
              "level": 2,
              "anchor": "cli.global_cmds",
              "text": "cli.global_cmds"
            },
            {
              "level": 2,
              "anchor": "cli.interactive_command",
              "text": "cli.interactive_command()"
            },
            {
              "level": 2,
              "anchor": "cli.new_command",
              "text": "cli.new_command()"
            },
            {
              "level": 2,
              "anchor": "cli.new_info_command",
              "text": "cli.new_info_command()"
            },
            {
              "level": 2,
              "anchor": "cli.new_status_command",
              "text": "cli.new_status_command()"
            },
            {
              "level": 2,
              "anchor": "cli.new_tech_preview_command",
              "text": "cli.new_tech_preview_command()"
            },
            {
              "level": 2,
              "anchor": "cli.new_unsupported_command",
              "text": "cli.new_unsupported_command()"
            },
            {
              "level": 2,
              "anchor": "cli.number_str",
              "text": "cli.number_str()"
            },
            {
              "level": 2,
              "anchor": "cli.object_expander",
              "text": "cli.object_expander()"
            },
            {
              "level": 2,
              "anchor": "cli.quiet_run_command",
              "text": "cli.quiet_run_command()"
            },
            {
              "level": 2,
              "anchor": "cli.run_command",
              "text": "cli.run_command()"
            },
            {
              "level": 2,
              "anchor": "cli.simenv",
              "text": "cli.simenv"
            },
            {
              "level": 2,
              "anchor": "cli.str_number",
              "text": "cli.str_number()"
            }
          ],
          "children": []
        },
        {
          "file": "configuration.html",
          "name": "10.3 Configuration",
          "headings": [
            {
              "level": 1,
              "anchor": "pyobj-Python-Module",
              "text": "pyobj Python Module"
            },
            {
              "level": 2,
              "anchor": "pyobj.Attribute",
              "text": "pyobj.Attribute"
            },
            {
              "level": 2,
              "anchor": "pyobj.ClassAttribute",
              "text": "pyobj.ClassAttribute"
            },
            {
              "level": 2,
              "anchor": "pyobj.ConfObject",
              "text": "pyobj.ConfObject"
            },
            {
              "level": 2,
              "anchor": "pyobj.Event",
              "text": "pyobj.Event"
            },
            {
              "level": 2,
              "anchor": "pyobj.Interface",
              "text": "pyobj.Interface"
            },
            {
              "level": 2,
              "anchor": "pyobj.Port",
              "text": "pyobj.Port"
            },
            {
              "level": 2,
              "anchor": "pyobj.PortObject",
              "text": "pyobj.PortObject"
            },
            {
              "level": 2,
              "anchor": "pyobj.SimpleAttribute",
              "text": "pyobj.SimpleAttribute()"
            },
            {
              "level": 1,
              "anchor": "comp-Python-Module",
              "text": "comp Python Module"
            },
            {
              "level": 2,
              "anchor": "comp.ConfigAttribute",
              "text": "comp.ConfigAttribute"
            },
            {
              "level": 2,
              "anchor": "comp.SimpleConfigAttribute",
              "text": "comp.SimpleConfigAttribute()"
            },
            {
              "level": 2,
              "anchor": "comp.StandardComponent",
              "text": "comp.StandardComponent"
            },
            {
              "level": 2,
              "anchor": "comp.StandardComponent-Methods",
              "text": "comp.StandardComponent Methods"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.add_component",
              "text": "comp.StandardComponent.add_component()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.add_connector",
              "text": "comp.StandardComponent.add_connector()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.add_pre_obj",
              "text": "comp.StandardComponent.add_pre_obj()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.add_slot",
              "text": "comp.StandardComponent.add_slot()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.connect",
              "text": "comp.StandardComponent.connect()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.copy_connector",
              "text": "comp.StandardComponent.copy_connector()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.del_slot",
              "text": "comp.StandardComponent.del_slot()"
            },
            {
              "level": 3,
              "anchor": "comp.StandardComponent.get_slot",
              "text": "comp.StandardComponent.get_slot()"
            },
            {
              "level": 2,
              "anchor": "comp.StandardConnectorComponent",
              "text": "comp.StandardConnectorComponent"
            },
            {
              "level": 2,
              "anchor": "comp.StandardConnectorComponent-Methods",
              "text": "comp.StandardConnectorComponent Methods"
            },
            {
              "level": 3,
              "anchor": "comp.StandardConnectorComponent.add_connector",
              "text": "comp.StandardConnectorComponent.add_connector()"
            },
            {
              "level": 1,
              "anchor": "Checkpoints",
              "text": "Checkpoints"
            },
            {
              "level": 2,
              "anchor": "update_checkpoint.SIM_register_class_update",
              "text": "update_checkpoint.SIM_register_class_update()"
            },
            {
              "level": 2,
              "anchor": "update_checkpoint.SIM_register_generic_update",
              "text": "update_checkpoint.SIM_register_generic_update()"
            },
            {
              "level": 2,
              "anchor": "update_checkpoint.SIM_register_post_update",
              "text": "update_checkpoint.SIM_register_post_update()"
            },
            {
              "level": 2,
              "anchor": "update_checkpoint.all_objects",
              "text": "update_checkpoint.all_objects()"
            },
            {
              "level": 2,
              "anchor": "update_checkpoint.for_all_objects",
              "text": "update_checkpoint.for_all_objects()"
            },
            {
              "level": 2,
              "anchor": "update_checkpoint.remove_attr",
              "text": "update_checkpoint.remove_attr()"
            },
            {
              "level": 2,
              "anchor": "update_checkpoint.remove_class",
              "text": "update_checkpoint.remove_class()"
            },
            {
              "level": 2,
              "anchor": "update_checkpoint.remove_class_attr",
              "text": "update_checkpoint.remove_class_attr()"
            },
            {
              "level": 2,
              "anchor": "update_checkpoint.rename_attr",
              "text": "update_checkpoint.rename_attr()"
            },
            {
              "level": 1,
              "anchor": "configuration.OBJ",
              "text": "configuration.OBJ"
            },
            {
              "level": 1,
              "anchor": "simics.pre_conf_object",
              "text": "simics.pre_conf_object"
            }
          ],
          "children": []
        },
        {
          "file": "hypersim.html",
          "name": "10.4 Hypersim",
          "headings": [
            {
              "level": 1,
              "anchor": "hypersim_patterns.add",
              "text": "10.4.1 hypersim_patterns.add()"
            },
            {
              "level": 1,
              "anchor": "hypersim_patterns.register_std_info_command",
              "text": "10.4.2 hypersim_patterns.register_std_info_command()"
            },
            {
              "level": 1,
              "anchor": "hypersim_patterns.register_std_status_command",
              "text": "10.4.3 hypersim_patterns.register_std_status_command()"
            }
          ],
          "children": []
        },
        {
          "file": "flash-memory.html",
          "name": "10.5 Flash Memory",
          "headings": [
            {
              "level": 1,
              "anchor": "Flash-Memory-Classes-and-Functions",
              "text": "Flash Memory Classes and Functions"
            },
            {
              "level": 2,
              "anchor": "flash_memory.flash_add_model",
              "text": "flash_memory.flash_add_model()"
            },
            {
              "level": 2,
              "anchor": "flash_memory.flash_create_memory",
              "text": "flash_memory.flash_create_memory()"
            },
            {
              "level": 2,
              "anchor": "flash_memory.flash_create_memory_anon",
              "text": "flash_memory.flash_create_memory_anon()"
            }
          ],
          "children": []
        },
        {
          "file": "system-panel.html",
          "name": "10.6 System Panel",
          "headings": [
            {
              "level": 1,
              "anchor": "API",
              "text": "API"
            },
            {
              "level": 2,
              "anchor": "Standard-Widgets-Colors",
              "text": "Standard Widgets Colors"
            },
            {
              "level": 2,
              "anchor": "systempanel.SystemPanel",
              "text": "systempanel.SystemPanel"
            },
            {
              "level": 2,
              "anchor": "systempanel.SystemPanelException",
              "text": "systempanel.SystemPanelException"
            },
            {
              "level": 1,
              "anchor": "Widget-Types",
              "text": "Widget Types"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.BitfieldImageOutput",
              "text": "systempanel.widgets.BitfieldImageOutput"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.BitmapButton",
              "text": "systempanel.widgets.BitmapButton"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.BitmapLed",
              "text": "systempanel.widgets.BitmapLed"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.BitmapToggleButton",
              "text": "systempanel.widgets.BitmapToggleButton"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.Button",
              "text": "systempanel.widgets.Button"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.Canvas",
              "text": "systempanel.widgets.Canvas"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.Column",
              "text": "systempanel.widgets.Column"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.Empty",
              "text": "systempanel.widgets.Empty"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.Grid",
              "text": "systempanel.widgets.Grid"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.Image",
              "text": "systempanel.widgets.Image"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.Label",
              "text": "systempanel.widgets.Label"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.LabeledBox",
              "text": "systempanel.widgets.LabeledBox"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.Led",
              "text": "systempanel.widgets.Led"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.MultiImageOutput",
              "text": "systempanel.widgets.MultiImageOutput"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.NumberInput",
              "text": "systempanel.widgets.NumberInput"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.NumberOutput",
              "text": "systempanel.widgets.NumberOutput"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.Row",
              "text": "systempanel.widgets.Row"
            },
            {
              "level": 2,
              "anchor": "systempanel.widgets.ToggleButton",
              "text": "systempanel.widgets.ToggleButton"
            }
          ],
          "children": []
        },
        {
          "file": "python-api-testing.html",
          "name": "10.7 Testing",
          "headings": [
            {
              "level": 1,
              "anchor": "__pymodstest",
              "text": "10.7.1 stest"
            },
            {
              "level": 2,
              "anchor": "__pyfunstest.fail",
              "text": "fail"
            },
            {
              "level": 2,
              "anchor": "__pyfunstest.collect_failures",
              "text": "collect_failures"
            },
            {
              "level": 2,
              "anchor": "__pyfunstest.check_failures",
              "text": "check_failures"
            },
            {
              "level": 2,
              "anchor": "__pyfunstest.trap_log",
              "text": "trap_log"
            },
            {
              "level": 2,
              "anchor": "__pyfunstest.untrap_log",
              "text": "untrap_log"
            },
            {
              "level": 2,
              "anchor": "__pyfunstest.expect_true",
              "text": "expect_true"
            },
            {
              "level": 2,
              "anchor": "__pyfunstest.expect_false",
              "text": "expect_false"
            },
            {
              "level": 2,
              "anchor": "__pyfunstest.expect_equal",
              "text": "expect_equal"
            },
            {
              "level": 2,
              "anchor": "__pyfunstest.expect_different",
              "text": "expect_different"
            },
            {
              "level": 2,
              "anchor": "__pyfunstest.expect_log",
              "text": "expect_log"
            },
            {
              "level": 2,
              "anchor": "__pyfunstest.expect_log_mgr",
              "text": "expect_log_mgr"
            },
            {
              "level": 2,
              "anchor": "__pyfunstest.expect_exception",
              "text": "expect_exception"
            },
            {
              "level": 2,
              "anchor": "__pyfunstest.expect_exception_mgr",
              "text": "expect_exception_mgr"
            },
            {
              "level": 2,
              "anchor": "__pyclassstest.TestFailure",
              "text": "TestFailure"
            },
            {
              "level": 1,
              "anchor": "__pymoddev_util",
              "text": "10.7.2 dev_util"
            },
            {
              "level": 2,
              "anchor": "__pyfundev_util.bank_regs",
              "text": "bank_regs"
            },
            {
              "level": 2,
              "anchor": "__pyfundev_util.iface",
              "text": "iface"
            },
            {
              "level": 2,
              "anchor": "__pyfundev_util.value_to_tuple_be",
              "text": "value_to_tuple_be"
            },
            {
              "level": 2,
              "anchor": "__pyfundev_util.value_to_tuple_le",
              "text": "value_to_tuple_le"
            },
            {
              "level": 2,
              "anchor": "__pyfundev_util.tuple_to_value_be",
              "text": "tuple_to_value_be"
            },
            {
              "level": 2,
              "anchor": "__pyfundev_util.tuple_to_value_le",
              "text": "tuple_to_value_le"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.Error",
              "text": "Error"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.InvalidBitfieldException",
              "text": "InvalidBitfieldException"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.RangeError",
              "text": "RangeError"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.MemoryError",
              "text": "MemoryError"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.Bitfield",
              "text": "Bitfield"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.Bitfield.fields",
              "text": "fields"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.Bitfield.mask",
              "text": "mask"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.Bitfield.mk_bitfield_map",
              "text": "mk_bitfield_map"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.Bitfield.value",
              "text": "value"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.Bitfield_LE",
              "text": "Bitfield_LE"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.Bitfield_BE",
              "text": "Bitfield_BE"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.AbstractRegister",
              "text": "AbstractRegister"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.AbstractRegister.fields",
              "text": "fields"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.AbstractRegister.read",
              "text": "read"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.AbstractRegister.write",
              "text": "write"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.Register",
              "text": "Register"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.Register.raw_read",
              "text": "raw_read"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.Register.raw_write",
              "text": "raw_write"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.Register_LE",
              "text": "Register_LE"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.Register_BE",
              "text": "Register_BE"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.GRegister",
              "text": "GRegister"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.GRegister.raw_read",
              "text": "raw_read"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.GRegister.raw_write",
              "text": "raw_write"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.IRegister",
              "text": "IRegister"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.IRegister.raw_read",
              "text": "raw_read"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.IRegister.raw_write",
              "text": "raw_write"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util_internal.Dev",
              "text": "Dev"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util_internal.Dev.configure_pre_object",
              "text": "configure_pre_object"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util_internal.Dev.finalize",
              "text": "finalize"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util_internal.Dev.register_simics_class",
              "text": "register_simics_class"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util_internal.Iface",
              "text": "Iface"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util_internal.Iface.fail",
              "text": "fail"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.Memory",
              "text": "Memory"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.Memory.clear",
              "text": "clear"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.Memory.is_range_touched",
              "text": "is_range_touched"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.Memory.read",
              "text": "read"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.Memory.write",
              "text": "write"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.Layout",
              "text": "Layout"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.Layout.clear",
              "text": "clear"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.Layout.read",
              "text": "read"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util.Layout.write",
              "text": "write"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.Layout_LE",
              "text": "Layout_LE"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util.Layout_BE",
              "text": "Layout_BE"
            },
            {
              "level": 1,
              "anchor": "__pymoddev_util_internal",
              "text": "10.7.3 dev_util_internal"
            },
            {
              "level": 2,
              "anchor": "__pyfundev_util_internal.iface",
              "text": "iface"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util_internal.Dev2",
              "text": "Dev"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util_internal.Dev.configure_pre_object2",
              "text": "configure_pre_object"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util_internal.Dev.finalize2",
              "text": "finalize"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util_internal.Dev.register_simics_class2",
              "text": "register_simics_class"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util_internal.Iface2",
              "text": "Iface"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util_internal.Iface.fail2",
              "text": "fail"
            },
            {
              "level": 2,
              "anchor": "__pyclassdev_util_internal.Memory",
              "text": "Memory"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util_internal.Memory.clear",
              "text": "clear"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util_internal.Memory.is_range_touched",
              "text": "is_range_touched"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util_internal.Memory.read",
              "text": "read"
            },
            {
              "level": 3,
              "anchor": "__pyfundev_util_internal.Memory.write",
              "text": "write"
            }
          ],
          "children": []
        },
        {
          "file": "python-api-script-branch.html",
          "name": "10.8 Script branches",
          "headings": [
            {
              "level": 1,
              "anchor": "script_branch-Python-Module",
              "text": "script_branch Python Module"
            },
            {
              "level": 2,
              "anchor": "script_branch.sb_create",
              "text": "script_branch.sb_create()"
            },
            {
              "level": 2,
              "anchor": "script_branch.sb_get_wait_id",
              "text": "script_branch.sb_get_wait_id()"
            },
            {
              "level": 2,
              "anchor": "script_branch.sb_in_main_branch",
              "text": "script_branch.sb_in_main_branch()"
            },
            {
              "level": 2,
              "anchor": "script_branch.sb_interrupt_branch",
              "text": "script_branch.sb_interrupt_branch()"
            },
            {
              "level": 2,
              "anchor": "script_branch.sb_run_in_main_branch",
              "text": "script_branch.sb_run_in_main_branch()"
            },
            {
              "level": 2,
              "anchor": "script_branch.sb_signal_waiting",
              "text": "script_branch.sb_signal_waiting()"
            },
            {
              "level": 2,
              "anchor": "script_branch.sb_wait",
              "text": "script_branch.sb_wait()"
            }
          ],
          "children": []
        },
        {
          "file": "python-api-probes.html",
          "name": "10.9 Probes",
          "headings": [
            {
              "level": 1,
              "anchor": "Probes-Python-Module",
              "text": "Probes Python Module"
            },
            {
              "level": 2,
              "anchor": "probes.CellFormatter",
              "text": "probes.CellFormatter"
            },
            {
              "level": 2,
              "anchor": "probes.ProbeProxy",
              "text": "probes.ProbeProxy"
            },
            {
              "level": 2,
              "anchor": "probes.get_all_probe_names",
              "text": "probes.get_all_probe_names()"
            },
            {
              "level": 2,
              "anchor": "probes.get_all_probes",
              "text": "probes.get_all_probes()"
            },
            {
              "level": 2,
              "anchor": "probes.get_objects_with_probe_cache",
              "text": "probes.get_objects_with_probe_cache()"
            },
            {
              "level": 2,
              "anchor": "probes.get_probe_by_object",
              "text": "probes.get_probe_by_object()"
            },
            {
              "level": 2,
              "anchor": "probes.get_probes",
              "text": "probes.get_probes()"
            },
            {
              "level": 2,
              "anchor": "probes.register_probe_delete_cb",
              "text": "probes.register_probe_delete_cb()"
            },
            {
              "level": 2,
              "anchor": "probes.unregister_probe_delete_cb",
              "text": "probes.unregister_probe_delete_cb()"
            }
          ],
          "children": []
        },
        {
          "file": "other.html",
          "name": "10.10 Other",
          "headings": [
            {
              "level": 1,
              "anchor": "Other-Python-specific-Classes-and-Functions",
              "text": "Other Python-specific Classes and Functions"
            },
            {
              "level": 2,
              "anchor": "simics.CriticalErrors",
              "text": "simics.CriticalErrors"
            },
            {
              "level": 2,
              "anchor": "table.column_names",
              "text": "table.column_names()"
            },
            {
              "level": 2,
              "anchor": "table.default_table_args",
              "text": "table.default_table_args()"
            },
            {
              "level": 2,
              "anchor": "table.get",
              "text": "table.get()"
            },
            {
              "level": 2,
              "anchor": "table.get_table_arg_value",
              "text": "table.get_table_arg_value()"
            },
            {
              "level": 2,
              "anchor": "table.new_table_command",
              "text": "table.new_table_command()"
            },
            {
              "level": 2,
              "anchor": "table.show",
              "text": "table.show()"
            }
          ],
          "children": []
        }
      ]
    },
    {
      "file": "complete-list.html",
      "name": "11 Complete List",
      "headings": [],
      "children": []
    },
    {
      "file": "haps-chapter.html",
      "name": "12 Haps",
      "headings": [],
      "children": [
        {
          "file": "__rm_hap_arinc429_word.html",
          "name": "Arinc429_Word",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_cli_command_added.html",
          "name": "CLI_Command_Added",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_component_change.html",
          "name": "Component_Change",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_component_hierarchy_change.html",
          "name": "Component_Hierarchy_Change",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_console_break_string.html",
          "name": "Console_Break_String",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_address_not_mapped.html",
          "name": "Core_Address_Not_Mapped",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_asynchronous_trap.html",
          "name": "Core_Asynchronous_Trap",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_at_exit.html",
          "name": "Core_At_Exit",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_back_to_front.html",
          "name": "Core_Back_To_Front",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_breakpoint_change.html",
          "name": "Core_Breakpoint_Change",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_breakpoint_memop.html",
          "name": "Core_Breakpoint_Memop",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_clean_at_exit.html",
          "name": "Core_Clean_At_Exit",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_conf_class_register.html",
          "name": "Core_Conf_Class_Register",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_conf_class_unregister.html",
          "name": "Core_Conf_Class_Unregister",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_conf_clock_change_cell.html",
          "name": "Core_Conf_Clock_Change_Cell",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_conf_object_change_clock.html",
          "name": "Core_Conf_Object_Change_Clock",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_conf_object_create.html",
          "name": "Core_Conf_Object_Create",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_conf_object_created.html",
          "name": "Core_Conf_Object_Created",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_conf_object_delete.html",
          "name": "Core_Conf_Object_Delete",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_conf_object_pre_delete.html",
          "name": "Core_Conf_Object_Pre_Delete",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_conf_object_rename.html",
          "name": "Core_Conf_Object_Rename",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_conf_objects_created.html",
          "name": "Core_Conf_Objects_Created",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_conf_objects_deleted.html",
          "name": "Core_Conf_Objects_Deleted",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_configuration_loaded.html",
          "name": "Core_Configuration_Loaded",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_context_activate.html",
          "name": "Core_Context_Activate",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_context_change.html",
          "name": "Core_Context_Change",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_context_deactivate.html",
          "name": "Core_Context_Deactivate",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_context_updated.html",
          "name": "Core_Context_Updated",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_continuation.html",
          "name": "Core_Continuation",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_control_register_read.html",
          "name": "Core_Control_Register_Read",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_control_register_write.html",
          "name": "Core_Control_Register_Write",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_device_access_memop.html",
          "name": "Core_Device_Access_Memop",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_disable_breakpoints.html",
          "name": "Core_Disable_Breakpoints",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_discard_future.html",
          "name": "Core_Discard_Future",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_dstc_flush_counter.html",
          "name": "Core_DSTC_Flush_Counter",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_exception.html",
          "name": "Core_Exception",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_exception_return.html",
          "name": "Core_Exception_Return",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_external_interrupt.html",
          "name": "Core_External_Interrupt",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_frequency_changed.html",
          "name": "Core_Frequency_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_global_message.html",
          "name": "Core_Global_Message",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_hap_callback_installed.html",
          "name": "Core_Hap_Callback_Installed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_hap_callback_removed.html",
          "name": "Core_Hap_Callback_Removed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_hap_type_added.html",
          "name": "Core_Hap_Type_Added",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_image_activity.html",
          "name": "Core_Image_Activity",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_initial_configuration.html",
          "name": "Core_Initial_Configuration",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_log_groups_change.html",
          "name": "Core_Log_Groups_Change",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_log_level_change.html",
          "name": "Core_Log_Level_Change",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_log_message.html",
          "name": "Core_Log_Message",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_log_message_extended.html",
          "name": "Core_Log_Message_Extended",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_log_message_filtered.html",
          "name": "Core_Log_Message_Filtered",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_magic_instruction.html",
          "name": "Core_Magic_Instruction",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_memory_space_map_changed.html",
          "name": "Core_Memory_Space_Map_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_mode_change.html",
          "name": "Core_Mode_Change",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_module_loaded.html",
          "name": "Core_Module_Loaded",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_multicore_acceleration_changed.html",
          "name": "Core_Multicore_Acceleration_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_multithreading_changed.html",
          "name": "Core_Multithreading_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_not_implemented.html",
          "name": "Core_Not_Implemented",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_preferences_changed.html",
          "name": "Core_Preferences_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_processor_schedule_changed.html",
          "name": "Core_Processor_Schedule_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_project_changed.html",
          "name": "Core_Project_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_recent_files_changed.html",
          "name": "Core_Recent_Files_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_rexec_active.html",
          "name": "Core_Rexec_Active",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_simulation_mode_change.html",
          "name": "Core_Simulation_Mode_Change",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_simulation_stopped.html",
          "name": "Core_Simulation_Stopped",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_skipto_progress.html",
          "name": "Core_Skipto_Progress",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_sync_instruction.html",
          "name": "Core_Sync_Instruction",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_time_transition.html",
          "name": "Core_Time_Transition",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_timing_model_change.html",
          "name": "Core_Timing_Model_Change",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_user_comments_changed.html",
          "name": "Core_User_Comments_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_core_write_configuration.html",
          "name": "Core_Write_Configuration",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_eth_injector_pcap_eof.html",
          "name": "Eth_Injector_Pcap_Eof",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_firewire_reset.html",
          "name": "Firewire_Reset",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_firewire_transfer.html",
          "name": "Firewire_Transfer",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_gfx_break.html",
          "name": "Gfx_Break",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_gfx_break_string.html",
          "name": "Gfx_Break_String",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_graphics_console_new_title.html",
          "name": "Graphics_Console_New_Title",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_graphics_console_show_hide.html",
          "name": "Graphics_Console_Show_Hide",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_internal_bookmark_list_changed.html",
          "name": "Internal_Bookmark_List_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_internal_break_io.html",
          "name": "Internal_Break_IO",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_internal_device_reg_access.html",
          "name": "Internal_Device_Reg_Access",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_internal_micro_checkpoint_loaded.html",
          "name": "Internal_Micro_Checkpoint_Loaded",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_internal_sb_wait.html",
          "name": "Internal_SB_Wait",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_internal_time_direction_changed.html",
          "name": "Internal_Time_Direction_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_internal_time_quantum_changed.html",
          "name": "Internal_Time_Quantum_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_realtime_enabled.html",
          "name": "Realtime_Enabled",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_rec_state_changed.html",
          "name": "REC_State_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_rexec_limit_exceeded.html",
          "name": "Rexec_Limit_Exceeded",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_rtc_nvram_update.html",
          "name": "RTC_Nvram_Update",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_scsi_disk_command.html",
          "name": "SCSI_Disk_Command",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_sn_napt_enabled.html",
          "name": "SN_NAPT_Enabled",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_text_console_new_title.html",
          "name": "Text_Console_New_Title",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_text_console_show_hide.html",
          "name": "Text_Console_Show_Hide",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_tlb_fill_data.html",
          "name": "TLB_Fill_Data",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_tlb_fill_instruction.html",
          "name": "TLB_Fill_Instruction",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_tlb_invalidate_data.html",
          "name": "TLB_Invalidate_Data",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_tlb_invalidate_instruction.html",
          "name": "TLB_Invalidate_Instruction",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_tlb_miss_data.html",
          "name": "TLB_Miss_Data",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_tlb_miss_instruction.html",
          "name": "TLB_Miss_Instruction",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_tlb_replace_data.html",
          "name": "TLB_Replace_Data",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_tlb_replace_instruction.html",
          "name": "TLB_Replace_Instruction",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_ui_record_state_changed.html",
          "name": "UI_Record_State_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_ui_run_state_changed.html",
          "name": "UI_Run_State_Changed",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_vga_break_string.html",
          "name": "Vga_Break_String",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_vga_refresh_triggered.html",
          "name": "Vga_Refresh_Triggered",
          "headings": [],
          "children": []
        },
        {
          "file": "__rm_hap_xterm_break_string.html",
          "name": "Xterm_Break_String",
          "headings": [],
          "children": []
        }
      ]
    }
  ]
}