module ALUTest;
    reg [31:0] a, b;
    reg [3:0] op;
    wire [31:0] result;
    wire zero, overflow, sign;
    
    ALU alu(.a(a), .b(b), .op(op), .result(result), .zero(zero), .overflow(overflow), .sign(sign));
    
    initial begin
        // Prueba 1: Suma con resultado positivo y sin desbordamiento
        a = 10;
        b = 20;
        op = 3'b000;
        #10;
		  $display("SUMA");
        $display("Resultado: %d, Zero: %b, Overflow: %b, Sign: %b", result, zero, overflow, sign);
        
        // Prueba 2: Resta con resultado negativo y desbordamiento
        a = 10;
        b = 30;
        op = 3'b001;
        #10;
		  $display("RESTA");
        $display("Resultado: %d, Zero: %b, Overflow: %b, Sign: %b", result, zero, overflow, sign);
        
        // Prueba 3: Multiplicación con resultado cero
        a = 5;
        b = 0;
        op = 3'b010;
        #10;
		  $display("MULTIPLICACION");
        $display("Resultado: %d, Zero: %b, Overflow: %b, Sign: %b", result, zero, overflow, sign);
        
        // Prueba 4: División con resultado negativo
        a = -25;
        b = 5;
        op = 3'b011;
        #10;
		  $display("DIVISION");
        $display("Resultado: %d, Zero: %b, Overflow: %b, Sign: %b", result, zero, overflow, sign);
        
        // Prueba 5: Módulo con resultado positivo
        a = 30;
        b = 7;
        op = 3'b100;
        #10;
		  $display("MODULO");
        $display("Resultado: %d, Zero: %b, Overflow: %b, Sign: %b", result, zero, overflow, sign);
        
        // Prueba 6: Suma con resultado negativo y sin desbordamiento
        a = -15;
        b = -20;
        op = 3'b000;
        #10;
		  $display("SUMA");
        $display("Resultado: %d, Zero: %b, Overflow: %b, Sign: %b", result, zero, overflow, sign);
        
        // Prueba 7: Resta con resultado positivo y sin desbordamiento
        a = 50;
        b = 25;
        op = 3'b001;
        #10;
		  $display("RESTA");
        $display("Resultado: %d, Zero: %b, Overflow: %b, Sign: %b", result, zero, overflow, sign);
        
        $finish;
    end
endmodule

